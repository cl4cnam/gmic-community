#@gmic
#@gui _<b>Testing</b>
#@gui Tom Keil

#**************************************
# About
#**************************************
#@gui About : _none_, fx_tk_about
#@gui : note = note{"
#@gui : <span foreground="purple">( <b>T</b>om Keil's <b>F</b>ilter <b>S</b>et for <b>G'MIC</b>)</span>\n\nis proposed to you by"}
#@gui : note = note("Tom Keil")
#@gui : note = note{"\n"}
#@gui : sep = separator()
#@gui : note = note{"
#@gui : The source code of this set of filters and additional informations and tutorials are available at :"}
##@gui : note = link("http://www.tkfilter.bplaced.net")
#@gui : sep = separator()
#@gui : note = note{"\nThe filters in this folder are still under development and may be subject to changes. Some filters appearing here are also part of the main filter tree of G'MIC. If they appear here too it means there are changes and updates not yet implemented in the main filter tree."}
fx_tk_about :
  fx_logo "Tom Keil's Filters"

# Quick fix to correct TK filters using old 'fx_channel_processing'.
tk_fx_channel_processing :
  fx_channel_processing {$3*100/255},{$2<1?-min(1,$2-1)*100:min(1,0.25*($2-1))*100},{log($1)},${4--1}

# Quick fix to correct TK filters using old 'fx_select_color'.
tk_fx_select_color :
  ($4^$5^$6^$7) _fx_select_color. $1 color={^} rm.
  repeat $!
    if $8==0                                  # Output selected colors.
      +_fx_select_color. $1
      select_color. $2%,$color
      b. $3%
      if $9 *. -1 +. 1 fi
      to_rgba.. s.. c *[-2,-1] a[-4--1] c
    else
      _fx_select_color. $1
      select_color. $2%,$color
      b. $3
      if $9 *. -1 +. 1 fi
      *. 255 r. 100%,100%,1,4
    fi
  mv. 0 done

# Quick fix to correct TK filters using old 'fx_replace_color'.
tk_fx_replace_color :
  to_rgba replace_color $1,$2%,${3--1} c 0,255

#****************************************
# Infrared simulation
#****************************************
#@gui Infrared Simulation : fx_tk_infrared, fx_tk_infrared_preview(1)
#@gui : Filter Density = float(0.75,0.01,0.99)
#@gui : Wood Effect Saturation = float(0.5,0,1)
#@gui : Wood Effect Color = int(-100,-180,180)
#@gui : Wood Effect Falloff = float(0.75,0,1)
#@gui : Sky Color = int(0,-180,180)
#@gui : Sky Falloff = float(1,0,1)
#@gui : Infrared Defocus = float(0,0,3)
#@gui : Exposure = int(0,-255,255)
#@gui : Contrast = float(1,0,4)
#@gui : Saturation = float(1,0,2)
#@gui : Color / B&W = bool(0)
#@gui : Add Grain = float(50,0,200)
#@gui : sep = separator(), Preview type = choice("Full","Forward horizontal","Forward vertical","Backward horizontal","Backward vertical","Duplicate top","Duplicate left","Duplicate bottom","Duplicate right","Duplicate horizontal","Duplicate vertical","Checkered","Checkered inverse")
#@gui : sep = separator(), note = note("<small>Author: <i>Tom Keil</i>      Latest update: <i>2012/17/07</i>.</small>")
fx_tk_infrared :
  repeat $! l[$>]
    +fx_hsv_equalizer 0,120,{240*$4},{if({$2==0},0,$3)},{if({$2==0},-$1,{-1+$2})},$1,240,{120*$6},$5,0,-$1,0,0,0,0,0
    b. $7 fx_compose_alpha $1,0
    tk_fx_channel_processing 1,$9,$8,0,0,0,100,256,0,0,0,2,0,0
    fx_mix_lab 1,0,0,$10,0,0,$10,0,0,0,2,0
    if $11==1 fx_blackandwhite 0.299,0,0.587,0,0.114,0,1,1,0,0,0,$12,$12,$12,2,{{w+h}/60000},0,0,16,4,0,0,0 fi
  done done

fx_tk_infrared_preview :
 gui_split_preview "fx_tk_infrared ${1--2}",$-1

#****************************************
# DOF Manipulation
#****************************************
#@gui DOF Manipulation : fx_tk_dof, fx_tk_dof_preview(1)
#@gui : sep = separator()
#@gui : Focal Point X = float (50,0,100)
#@gui : Focal Point Y = float (50,0,100)
#@gui : DOF 1 = int (30,0,255)
#@gui : DOF 2  = int (60,0,255)
#@gui : Transition = float(5,0,25)
#@gui : Defocus Strength = float(15,0,200)
#@gui : Defocus Style = choice(2,"median","gaussian","mixed")
#@gui : Depth Estimation Model = choice("automatic depth estimation","daylight scene","individual focus field mask","individual depth map")
#@gui : Bokeh Strength = float(0,0,1)
#@gui : Highlights Threshold = float(200,0,255)
#@gui : Bokeh Size = float(40,2,200)
#@gui : Bokeh Blur = float(2,0,20)
#@gui : Aperture Type = choice("circular","octogonal")
#@gui : Remove Blurring Artifacts = bool(0)
#@gui : sep = separator()
#@gui : Scheimpflug Effect = choice("none","vertical blend","horizontal blend","vertical only","horizontal only")
#@gui : Tilt Plane 1 = float(0,0,100)
#@gui : Tilt Plane 2 = float(0.01,0,100)
#@gui : sep = separator()
#@gui : Output Mode = choice("image","layers in focus/out of focus","focus field mask only","depth estimation only")
#@gui : Computation Mode = choice(1,"high quality","normal","high speed")
#@gui : Use Treshold Mask Mode = bool(0)
#@gui : sep = separator(), Preview type = choice("Full","Forward horizontal","Forward vertical","Backward horizontal","Backward vertical","Duplicate top","Duplicate left","Duplicate bottom","Duplicate right","Duplicate horizontal","Duplicate vertical","Checkered","Checkered inverse")
#@gui : sep = separator(), note = note("<small>Author: <i>Tom Keil</i>      Latest update: <i>2012/01/21</i>.</small>")
##@gui : note = link("Filter explained here",http://www.tkfilter.bplaced.net/TKFilter%20tutorials%20DOF%20manipulation.html)
fx_tk_dof :

  # Check valid input
  if $8==0||$8==1 if $!!=1 error[] "Select input mode ACTIVE. This option is available for single layer only." fi fi
  if $8==2||$8==3 if $15==3||$15==4||$17==3 error[] "Option not available for individual mask" fi fi
  if $8==2||$8==3 if $!!=2 error[] "For individual mask select input mode ACTIVE AND BELOW" fi fi

  # Create layers
  tr={$5} dfs={$6} bsi={$11} bsb={$12}
  if $19==1 scdo=50 scup=200 tr={$5/2} dfs={$6/2} bsi={$11/2} bsb={$12/2} fi
  if $19==2 scdo=25 scup=400 tr={$5/4} dfs={$6/4} bsi={$11/4} bsb={$12/4} fi

  if $8==0||$8==1
    if $19!=0 +r[0] $scdo%,$scdo% else [0] fi
  else
    if $19!=0 r. $scdo%,$scdo% fi
  fi
  if $19!=0 +r[0] $scdo%,$scdo% else [0] fi
  if $8==2||$8==3 rv[-1,-2] fi

  # Create focus mask

  if $15==0||$15==1||$15==2

  if $8==0 fx_tk_autodepth.
  elif $8==1 fx_tk_depthmap. 1,20,0,0,0,0,0
  elif $8==2||$8==3 fi

  if $18!=3 if $8!=2
  if $20==1 to_rgb.
  +f. if(i>={{255-$3}+{$4/2}},0,i)
  +f. if(i<={{255-$3}-{$4/2}},0,i) compose_darken[-1,-2]
  n. 0,255 f. if(i>=1,255,i) rm..
  else
  local_similarity_mask. $1,$2,$3,$4,4,0
  fi
  blur_xy. $tr
  fi fi

 fi

#create Scheimpflug effect

 if $15==1||$15==3
 +fx_linear_gradient. 0,0,0,255,255,255,255,255,1,180,100,$16
 +fx_linear_gradient. 0,0,0,255,255,255,255,255,0,180,0,$17
 compose_darken[-1,-2]
 fi

 if $15==2||$15==4
 +fx_linear_gradient. 0,0,0,255,255,255,255,255,1,90,100,$16
 +fx_linear_gradient. 0,0,0,255,255,255,255,255,0,90,0,$17
 compose_darken[-1,-2]
 fi

#finalize mask

 if $15==1||$15==2 rv[-1,-2] compose_lighten[-1,-2] fi
 if $15==3||$15==4 rm.. fi

#inpaint background

 if $18==0||$18==1

 if $14==1 [-1,-2]

 blur_xy. {$tr/2}
 ir. 1,256 n. 0,255
 tk_fx_replace_color. 1,0,0,0,0,255,0,0,0,0
 inpaint.. . rm[-1,1] rv[-1,-2]

 fi

#blur defocused layer

 if $7==0 median.. $dfs
 elif $7==1 blur_xy.. $dfs
 elif $7==2 median.. {$dfs/2} blur_xy. {$dfs/5}
 fi

#create Bokeh

 if $9!=0 if $19==0  [0] else +r[0] $scdo%,$scdo% fi
 fx_morpho. 1,$bsi,0,{2-$13},0,1,0
 tk_fx_replace_color. {$10*1.765},0,0,0,0,255,0,0,0,0
 blur_xy. $bsb

 rv[-1,-3] fx_compose_lighten[-1,-3] $9
 fi

#resize and recompose
 if $19!=0 r[1,2] $scup%,$scup% fi

 to_rgba[0] s[0] c rv[3,5]
 compose_multiply[3,5] to_gray[3]
 a[0,1,2,3] c
 if $18==0 rv[0,1] compose_rgba[0,1] fi

 fi

 if $18!=1 k. fi
 if $18==2||$18==3 if $19!=0 r. $scup%,$scup% fi fi

fx_tk_dof_preview :

 to_rgba

 if $8==0||$8==1 if $!!=1 error[] "Select input mode ACTIVE. This option is available for single layer only."
 fi fi

 if $8!=2&&$8!=3
 gui_split_preview "fx_tk_dof ${1--2}",$-1
 else fx_tk_dof ${1--1} fi

 to_rgba

 if $20==0
 line 100%,$2%,{$1+5}%,$2%,1,255,0,0
 line 0%,$2%,{$1-5}%,$2%,1,255,0,0

 line $1%,100%,$1%,{$2+5}%,1,255,0,0
 line $1%,0%,$1%,{$2-5}%,1,255,0,0
 fi

#*****END OF FILTER**********************

#****************************************
#beauty retouch
#****************************************

#@gui Beauty Retouch : fx_tk_retouch, fx_tk_retouch_preview(0)
#@gui : sep = separator()
#@gui : Smoothness = float(30,0,100)
#@gui : Details = float(3,0,10)
#@gui : Smoothing Strength = float(1,0,5)
#@gui : Edge Threshold = float(20,0,50)
#@gui : Edge Smoothness = float(1.5,0,10)
#@gui : Sharpening Radius = float(1,0,10)
#@gui : Sharpening Strength = float(2.5,0,5)
#@gui : View Edge Mask = bool(0)
#@gui : Smoothen Skin Tones Only = bool(0)
#@gui : sep = separator(), Preview type = choice("Full","Forward horizontal","Forward vertical","Backward horizontal","Backward vertical","Duplicate top","Duplicate left","Duplicate bottom","Duplicate right","Duplicate horizontal","Duplicate vertical","Checkered","Checkered inverse")
#@gui : sep = separator(), note = note("<small>Author: <i>Tom Keil</i>.      Latest update: <i>2011/05/01</i>.</small>")
#@gui : note = link("Filter explained here","http://www.flickr.com/groups/gmic/discuss/72157625538669041/")
fx_tk_retouch :
  repeat $! l[$>]
    if $8==1
      +fx_edges $5,$4,0,0 fx_gaussian_blur {$5*5},0,0,1,1,0,0
    else
      +to_rgba[0]  +to_gray[0] fx_edges[2] $5,$4,0,0
      fx_gaussian_blur[2] {$5*5},0,0,1,1,0,0 to_gray[2] +to_rgba[0] +negate[2]
      fx_highpass[1] {$1},2,1,1,0
      fx_gaussian_blur[1] $2,0,0,1,1,0,0
      to_rgba[0]
      if $9==1  +to_rgba[0] channels[5] 0
      tk_fx_channel_processing[5] 1,1,4,0,0,0,100,256,0,0,0,2,7,0
      fx_gaussian_blur[5] {{w+h}/1000},0,0,1,0,0,0 to_gray[5] fi
      split[1] c  reverse[4,5] compose_multiply[4,5]
      if $9==1 reverse[4,-1] compose_multiply[4,-1] fi
      append[-6,-5,-4,-3] c
      reverse[0,1] fx_compose_softlight[0,1] {$3/5}
      fx_unsharp.. 0,$6,30,$7,0.00,1.00,0.5,1,0,7,0
      split.. c  reverse[-1,-2] compose_multiply[-1,-2] append[-4,-3,-2,-1] c
      blend[0,1] alpha
    fi
  done done

fx_tk_retouch_preview :
  gui_split_preview "fx_tk_retouch ${1--2}",$-1

#*************END OF FILTER***********

#*******END OF DIRECTORY**************
#@gui _

#@gui _<b>Stereoscopic 3D</b>

#****************************************
#3D Conversion
#****************************************

#@gui 3D Conversion : fx_tk_make3D, fx_tk_make3D_preview(1)
#@gui : sep = separator()
#@gui : note = note("Stereoscopic settings:")
#@gui : Scene Selector = choice("automatic depth estimation","daylight scene","optimized lateral inhibition","light motive","dark motive","landscape","center foreground","center background","left foreground","left diagonal foreground","right foreground","right diagonal foreground","left and right foreground","left and right background","bottom and top foreground","bottom and left foreground","bottom and right foreground","central perspective outdoor","central perspective indoor","portrait","human 1","human 2","studio","underwater","flat")
#@gui : Far Point Deviation = float(20,-100,100)
#@gui : Stereoscopic Window Position = float(0,-100,100)
#@gui : Depth Field Control = float(20,0,100)
#@gui : Feature Analyzer Threshold = float(0,0,5)
#@gui : Feature Analyzer Smoothness = float(0,0,5)
#@gui : Local Detail Enhancer = float(0,0,5)
#@gui : DOF Analyzer = float(0,0,5)
#@gui : Frequency Analyzer = float(0,0,5)
#@gui : Flip Left / Right = bool(0)
#@gui : Use Individual Depth Map = bool(0)
#@gui : note = note("<small>To use this option your depth map must be placed below your image. Switch input layers to <i><b>Active and below</b></i>.</small>")
#@gui : sep = separator()
#@gui : note = note("Image settings:")
#@gui : Black & White = bool (0)
#@gui : Output Format = choice("Anaglyph red/cyan","Anaglyph red/cyan optimized","Anaglyph blue/yellow","Anaglyph blue/yellow optimized","Anaglyph green/magenta","Anaglyph green/magenta optimized","Full side by side keep width","Full side by side keep uncompressed","Full bottom/top","Half side  by side","Half bottom/top","Interlace horizontal","Interlace vertical","Full HD frame packing","Unaligned images","Depth map only")
#@gui : Gamma Compensation = float(1.2,0,4)
#@gui : Anti-Ghosting = float(25,0,255)
#@gui : Color Boost = float(1,0,4)
#@gui : Anaglyph Glasses Adjustment = float(0,-100,100)
#@gui : Autocrop = bool (1)
#@gui : Bidirectional Rendering = bool (0)
#@gui : sep = separator()
#@gui : note = note("Frame settings:")
#@gui : Render Multiple Frames = bool (0)
#@gui : Render Routine for Wiggle Animations = bool (0)
#@gui : Frames = int(2,2,100)
#@gui : Frame Size = int(200,50,1920)
#@gui : sep = separator(), note = note("<small>Author: <i>Tom Keil</i>.      Latest update: <i>2012/20/09</i>.</small>")
##@gui : note = link("Filter explained here",http://www.tkfilter.bplaced.net/TKFilter%20tutorials%202Dto3D%203D-automatic%20stereoscopic%20conversion.html)

fx_tk_make3D :

 # prepare image

 sh={-$2} sw={-$sh-$3} size1={w} size2={h} to_rgb[0] r[0] $size1,$size2 [0]

 # create depth map

 if $11==0
 +fx_tk_depthmap. $1,$4,$5,$6,$7,$8,$9,0,0,0 r. $size1,$size2
 fx_gaussian_blur. 0,{{w+h}/700},{{w+h}/350},1,0,0,0

 # individual depth map

 else if $!!=3
 error[] "For individual depth map select input mode ACTIVE AND BELOW" fi
 rv[1,-1] to_rgb. luminance.

 # analyze image features to enrich individual maps

 if $11==1
 if $9!=0
 +fc[0] 128,128,128 +channels[0] 2 negate. c. 0,90
 n. 0,128 rv[-1,-2] compose_darken[-1,-2]
 +channels[0] 0 negate. c. 165,255 n. 128,255 rv[-1,-2]
 compose_hardlight[-1,-2] rv[-1,-2]
 if $11==0 if $1!=20 fx_compose_average[-1,-2] {$9/5}
 else fx_compose_value[-1,-2] {$9/5},0
 tk_fx_channel_processing. 1,{$4/25},0,0,0,0,100,256,0,0,0,2,0,0
 fi
 else fx_compose_value[-1,-2] {$9/5},0 fi fi

 if $8!=0 +fx_highpass[0] 2,2,0,0,0
 tk_fx_replace_color. 5,0,128,128,128,255,0,0,0,255
 fx_morpho. 3,70,0,0,0,1,0   to_gray. av={ia}
 ir. $av,255 n. 0,255 blur_xy. 25
 rv[-1,-2] fx_compose_overlay[-1,-2] {$8/5} fi

  if $5!=0 +fx_isophotes[0] {{$5*3}+2},0,0,0
 fx_morpho. 3,{5-{$5/2}},0,0,0,1,0
 tk_fx_channel_processing. 1,1,255,0,0,0,100,256,0,0,0,2,0,0
 rv[-1,-2] fx_compose_overlay[-1,-2] {$5/10}
 +fx_gradient_norm[0] {$6*2},{1.5-{0.1+{$5/3.6}}},0,100,0,0
 rv[-1,-2] compose_lighten[-1,-2] fx_segment_watershed. $5,$6,0,0
 fi

 if $7!=0 +luminance[0] fx_map_tones. 1,{0.25-{$7/20}},0,30,3,0
 rv[-1,-2] fx_compose_overlay[-1,-2] {$7/10} fi

 n. 0,255

 fi fi
 #frame size for multiple frames

 if $20==1 r {w*{$23/max(w,h)}},{h*{$23/max(w,h)}},1,3,6 c 0,255 fi

 #create second view

 if $20==0
 if $13!=15 if $19==0
 if $sw<=0 negate. fi
 r. $size1,$size2,1,2 s. c f. 0 n.. 0,$sw a[-1,-2] c
 warp.. .,1 shift.. $sh,0 rm.
 else
 . r[-1,-2] 100%,100%,1,2
 s. c f. 0 n.. 0,{abs($sw/2)} a[-1,-2] c
 negate.. s.. c f.. 0 n... 0,{-abs($sw/2)} a[-2,-3] c
 warp[-4] ..,1 warp... .,1
 shift... $sh,0 rm[-1,-2]
 fi fi
 else

 #create multiple frames

 if $19==0
 count={$22} dev=0 repeat $count dev={$dev+{$sw/$22}}
 [0] rv[-1,-2]
 if $sw<=0 negate. fi
 r. 100%,100%,1,2 s. c f. 0
 if $21==0 n.. 0,$dev else n.. {-$dev},$dev fi
 a[-1,-2] c warp.. .,1 to_gray. n. 0,255
 if $sw<=0 negate. fi
 done rm[-1,0] rv
 else
 count={abs($22/2)} dev=0
 repeat $count dev={$dev+{$sw/$count}}
 .. rv[-1,-2]
 .. rv[-1,-2]
 . r[-1,-2] 100%,100%,1,2
 s. c f. 0
 if $21==0 n.. 0,{abs($dev/2)}
 else n.. {-abs($dev/2)},{abs($dev/2)} fi
 a[-1,-2] c
 negate.. s.. c f.. 0
 if $21==0 n... 0,{-abs($dev/2)}
 else n... {-abs($dev/2)},{abs($dev/2)} fi
 a[-2,-3] c
 warp[-4] ..,1 warp... .,1 rm.. to_gray. n. 0,255
 mv[-4] -1 done rm[-1,-2] mv[0--1:2] -1 rv[0-50%] mv[0] 50%
 fi fi

 #crop images
 if $20==0 if $18==1 if $13!=15
 if $sh>=0 z[-1,-2] $sh,0,{w},{h} else z[-1,-2] 0,0,{w+$sh},{h} fi
 if $19==0
 if $sw>=0 z[-1,-2] $sw,0,{w},{h} else z[-1,-2] 0,0,{w+$sw},{h} fi
 else z[-1,-2] {abs($sw/2)},0,{w-abs($sw/2)},{h}
 fi fi fi fi

 #align stereoscopic image

 if $12==1 fx_blackandwhite 0.299,0,0.587,0,0.114,0,1,1,0,0,0,0,0,0,2,0,0,0,16,4,0,0,0 fi
 if $20==0
 if $13!=14&&$13!=15
 fx_tk_stereoimage[0,1] $13,$10,$14,$15,$16,$17
 elif $13==14 k[0,1]
 elif $13==15 k.
 fi
 fi

# adjust unaligned output images

 if $13==14 apply_gamma $14 tk_fx_channel_processing 1,1,$15,0,0,0,100,256,0,0,1,10,7,0
 fx_mix_lab 1,0,0,$16,0,0,$16,0,0,0,2,0 fi

# preview function

 fx_tk_make3D_preview :

 if $20==0 shpre={$2/3} swpre={$3/3} else shpre={$2*{400/$23}} swpre={$3*{400/$23}} fi

 if $11==1&&$!!=2 fc[0] 255,0,128,255 k[0] text "For individual depth map",10,80%,20,1,0,0,0,255
 text "select input mode ACTIVE AND BELOW.",10,90%,20,1,0,0,0,255
 else
 fx_tk_make3D $1,$shpre,$swpre,${4-12},{if({$20==1},14,$13)},${14-19},0,${21-23} if $13==14||$20==1 k[1] fi
 fi

#************END OF FILTER***************

#****************************************
#3D Video Conversion
#****************************************

#@gui 3D Video Conversion : fx_tk_video3D, fx_tk_video3D_preview(1)
#@gui : sep = separator()
#@gui : note = note("<b>Stereoscopic settings:</b>")
#@gui : Scene Selector = choice("automatic depth estimation","daylight scene","optimized lateral inhibition","light motive","dark  motive","landscape","center foreground","center background","left  foreground","left diagonal foreground","right foreground","right diagonal  foreground","left and right foreground","left and right background","bottom and top foreground","bottom and left foreground","bottom and right foreground","central  perspective outdoor","central perspective indoor","portrait","human 1","human  2","studio","underwater","flat")
#@gui : Far Point Deviation = float(10,-100,100)
#@gui : Stereo Window Position = float(-10,-100,100)
#@gui : Depth Field Control = float(20,0,100)
#@gui : Feature Analyzer Threshold = float(0,0,5)
#@gui : Feature Analyzer Smoothness = float(0,0,5)
#@gui : Local Detail Enhancer = float(0,0,5)
#@gui : DOF Analyzer = float(0,0,5)
#@gui : Frequency Analyzer = float(0,0,5)
#@gui : Motion Analyzer = float(0,-5,5)
#@gui : Flip Left / Right = bool(0)
#@gui : sep = separator()
#@gui : note = note("<b>Frames settings:</b>")
#@gui : Black & White = bool (0)
#@gui : Output Format = choice("Anaglyph red/cyan","Anaglyph red/cyan optimized","Anaglyph blue/yellow","Anaglyph blue/yellow optimized","Anaglyph green/magenta","Anaglyph green/magenta optimized","Full side by side keep width","Full side by uncompressed","Full bottom/top","Half side  by side","Half bottom/top","Interlace horizontal","Interlace vertical","Full HD frame packing","Left and right image streams","Depth maps only")
#@gui : Output to Folder = bool(0)
#@gui : Folder Name = folder()
#@gui : Gamma Compensation = float(1.2,0,4)
#@gui : Anti-Ghosting = float(25,0,255)
#@gui : Color Boost = float(1,0,4)
#@gui : Anaglyph Glasses Adjustment = float(0,-100,100)
#@gui : Autocrop = bool (1)
#@gui : Set Frame Format = bool (1)
#@gui : Frame Width = int(1280,128,4096)
#@gui : Frame Format = choice(1,"4:3","16:9","3:2","2:1","21:9","Keep aspect ratio")
#@gui : Frames Offset = int(0,-5,5)
#@gui : Reverse Frame Stack = bool(0)
#@gui : sep = separator()
#@gui : note = note("<b>Input settings:</b>")
#@gui : Processing Mode = choice("Layer processing","Batch processing")
#@gui : Input Folder = folder()
#@gui : Input Frame Files Name = text("frame_")
#@gui : Start Frame Number = int(0,0,99998)
#@gui : End Frame Number = int(1,1,99999)
#@gui : Frame Files Format = choice(".png",".bmp")
#@gui : sep = separator()
#@gui : note = note("<b>Advanced editing:</b>")
#@gui : Activate Custom Filter = choice("off","on","left stream only", "right stream only")
#@gui : Custom Filter Code = text(1,"# old movie #\n#luminance fx_stripes_y 10,3,0 sepia \n\n#simple vintage#\n#+fc 0,15,125 rv fx_compose_exclusion 0.3 \n\n# HDR popout #\n#fx_map_tones_fast 2,0.3,3,2 fx_unsharp_octave 4,5,3,0,0,0\n\n")
#@gui : Depth Fade In Frames  = int(0,0,120)
#@gui : Depth Fade Out Frames  = int(0,0,120)
#@gui : sep = separator()
#@gui : note = note("<b>Advanced quality control:</b>")
#@gui : Key Frame Rate = int(1,1,100)
#@gui : Stabilizer = float(5,0,100)
#@gui : Preprocessor Radius = float(0,0,5)
#@gui : Preprocessor Power = float(0,0,5)
#@gui : Custom Depth Correction = choice("None","Custom correction map","Single custom depth map","Custom depth maps stream")
#@gui : Rendering Mode = choice(1,"Right eye view","Bidirectional rendering","Align image streams","Anaglyph reconstruction")
#@gui : sep = separator()
#@gui : note = note("<b>Preview:</b>")
#@gui : Preview Type = Choice("first frame","last frame","selected frame","full layer stack -slow!-")
#@gui : Preview Frame Selection  = int(0,0,99999)
#@gui : sep = separator(), note = note("<small><b>Switch input layers to All.</b></small>")
#@gui : sep = separator(), note = note("<small>Author: <i>Tom Keil</i>.       Latest update: <i>2012/07/10</i>.</small>")
##@gui : note = link("Filter explained  here",http://www.tkfilter.bplaced.net/TKFilter%20tutorials%202Dto3D%203D-automatic%20stereoscopic%20conversion.html)

 fx_tk_video3D :

 sh={-$2} sw={-$sh-$3} size1={w} size2={h}
 if narg($_previewflag)==0 _previewflag=0 fi
 if $_previewflag!=0 sh={$sh*{400/$22}} sw={$sw*{400/$22}} fi

 if $26==0

 ####layer based conversion####

 if $34!=0||$35!=0
 if $34>=$!-$35" || "$35>=$!-$34 error[] "Fade out of frame range."
 fi fi

 if $13!=14 channels 0,2 fi

 if $_previewflag!=2  frames={$!} else frames=1  fi
 counter={$!} index=0

 if $_previewflag!=0 r 400,328 fi

 # image stream alignment and 2D filtering only modes

 #if $41==3" && "$_previewflag==0 error[] "Anaglyph video reconstruction in batch processing mode only" fi

 flag3d=0 if $41!=2

 if !($2==0" && "$3==0" && "$1==24" && "$13==14" && "$32!=0) flag3d=1

 # start 3D conversion per frame

 repeat $frames

 # prepare images
 [$index]

 # create depth maps

 if $40==0" || "$40==1
 +fx_tk_depthmap[$index] $1,$4,$5,$6,$7,$8,$9,$38,$39,{w*{$37/1000}}
 r. $size1,$size2 fi

 if $40==1
 infilec="correction.png" inpathc="$27/"$infilec""
 input. $inpathc
 to_rgba[-1,-2] compose_rgba[-1,-2] to_rgb.

 elif $40==2
  infilec="depthmap.png" inpathc="$27/"$infilec""
 input. $inpathc

 elif $40==3
 if $_previewflag==2
 infilec="depthmap_"$_mapin".png" inpathc="$27/depthmaps/"$infilec""
 else
  infilec="depthmap_"{$frames-$index}".png" inpathc="$27/depthmaps/"$infilec""
 fi
 input. $inpathc
 rv[$index,-2]

 fi

 if $_previewflag!=0 r 400,328 fi

 # motion analysis

 if $10!=0
 if $_previewflag==2 [0] mv[-4] -1
 compose_difference[-1,-2] luminance. n. 0,255
 ir. 0,{{$37/2}+1} negate. n. 0,255
 else
 [$index] [{$index+1}]
 compose_difference[-1,-2] luminance. n. 0,255

 ir. 0,{{$37/2}+1}

negate. n. 0,255
 if $index<=$frames-2 +negate. fi
 fi
 fi
 index={$index+1} done

 if $10!=0
 if $_previewflag==2
 if $42==0  infile={$29} elif $42==1 infile={$30} elif $42==2 infile={$43} fi

 if $infile==2 rv[-1,-2] else if $infile>=$29+2
 compose_difference[-4,-5] luminance[-4] n[-4] 0,255
 ir[-4] 0,1 negate[-4] n[-4] 0,255
 negate[-4] compose_darken[-1,-4]
 mv... -1 fi fi
 blur_xy.. {w*{$37/1000}}
 if $infile!=$29 if $10>=0 fx_compose_lighten[-1,-2] {abs($10)/5}
 else negate.. fx_compose_darken[-1,-2] {abs($10)/5} fi fi

 else
 rm. rm[{$counter+3}]
 repeat $frames-2
 mv[{$counter+6}] {$counter+2}
 compose_darken[{$counter+2},{$counter+3}]
 rv[{$counter+1},{$counter+2}]
 blur_xy[{$counter+1}] {w*{$37/1000}}
 if $10>=0
 fx_compose_lighten[{$counter+1},{$counter+2}] {abs($10)/5}
 else negate[{$counter+1}]
 fx_compose_darken[{$counter+1},{$counter+2}] {abs($10)/5}
 fi
 counter={$counter+2} done
 rv[-3,-4] blur_xy[-4] {w*{$37/1000}}
 if $10>=0 fx_compose_lighten[-3,-4] {abs($10)/5}
 else negate[-4] fx_compose_darken[-3,-4] {abs($10)/5} fi

 fi
 fi

 # create second view frameset

 if $_previewflag==2 if $24!=0 rm.. fi fi

 index={-1} repeat $frames

 if $13!=15

 if $41==0 if $sw<=0 negate[$index] fi fi

 if $_previewflag!=2
 if $34!=0 if -$index<=$34 sw={{{-$index}/$34}*$sw} sh={{{-$index}/$34}*$sh}
 fi fi
 if $35!=0 if -($index+1)>=$frames-$35 sw={$sw*{{$frames-{-{$index+1}}}/$35}}
 sh={$sh*{{$frames-{-{$index+1}}}/$35}} fi fi fi

 if $41==0
 r[$index] 100%,100%,1,2 s[$index] c f[$index] 0 n[{$index-1}] 0,$sw
 a[$index,{$index-1}] c warp[{$index-1}] [$index],1
 shift[{$index-1}] $sh,0 rm[$index]

 else

 [$index]
 mv. {$frames+{$index+1}}

 r[$index,{$frames+{$index+1}}] 100%,100%,1,2
 s[$index] c f[$index] 0 n[{$index-1}] 0,{abs($sw/2)} a[$index,{$index-1}] c

 negate[{$frames+{$index+1}}] s[{$frames+{$index+1}}] c
 f[{$frames+{$index+2}}] 0 n[{$frames+{$index+1}}] 0,{-abs($sw/2)}
 a[{$frames+{$index+1}},{$frames+{$index+2}}] c

 warp[{$frames+{$index+0}}] [{$frames+{$index+1}}],1
 warp[{$index-1}] [$index],1
 shift[{$index-1}] $sh,0
 rm[$index,{$frames+{$index+1}}]

 fi
 fi

 sh={-$2} sw={-$sh-$3}
 if $_previewflag!=0 sh={$sh*{400/$22}} sw={$sw*{400/$22}} fi
 index={$index-1} done

 # frames offset

 if $13!=15 if $_previewflag!=2
 if $24>=0 repeat $24 rm. [$frames]
 mv. $frames done
 else counter={1} repeat abs($24) rm[$frames]
 [{-$counter}] mv. {-$counter-1} counter={$counter+1} done fi
 fi fi

 # autocrop frames

 if $20==1 if $13!=15
 if $sh>=0 z $sh,0,{w},{h} else z 0,0,{w+$sh},{h} fi
 if $sw>=0 z $sw,0,{w},{h} else z 0,0,{w+$sw},{h} fi
 fi fi

 #end image stream alignment and 2D mode bypass

 fi fi

 # apply custom filter

 if $_previewflag!=2
 if $32!=0 if $13!=15 repeat $! l[$>] fx_custom_code "$33",0,0,0 done done fi fi
 else
 if $32==1 if $13!=15 fx_custom_code[0,1] "$33",0,0,0 fi
 elif $32==2 if $13!=15 l[0] fx_custom_code "$33",0,0,0 done fi
 elif $32==3 if $13!=15 l[1] fx_custom_code "$33",0,0,0 done fi
 fi fi

 # align stereoscopic images

 if $41==2 if $13==14" || "$13==15 error[] "Output format not allowed for image stream alignment" fi fi
 if $12==1 ac "fx_blackandwhite 0.3,0,0.6,0,0.1,0,1,1,0,0,0,0,0,0,2,0,0,0,16,4,0,0,0",rgb fi

 counter={$frames-1} index={-2}
 repeat $frames

 if $13!=14" && "$13!=15
 fx_tk_stereoimage[-1,$counter] $13,$11,$16,$17,$18,$19
 elif $13==15 rm[0,$index]
 fi counter={$counter-1} index={$index-1} done

 # adjust output image streams

 if $13==14 apply_gamma $16 tk_fx_channel_processing 1,1,$17,0,0,0,100,256,0,0,1,10,7,0
 fx_mix_lab 1,0,0,$18,0,0,$18,0,0,0,2,0 fi
 # resize frames to output format

 if $21==1 if $13!=13
 if $23==0 r $22,{$22*0.75},1,{s},6
 elif $23==1 r $22,{{$22*9}/16},1,{s},6
 elif $23==2 r $22,{{$22*2}/3},1,{s},6
 elif $23==3 r $22,{$22*0.5},1,{s},6
 elif $23==4 r $22,{{$22*9}/21},1,{s},6
 elif $23==5 r $22,{$22*{h/w}},1,{s},6 fi
 fi fi  c 0,255

 if $25==1 rv fi

 # save frames to folder

 if $14==1
 if $31==0" || "$13==15 end=".png" else end=".bmp" fi
 rv

 index={0} name=0
 if $13==14" && "$flag3d==1
 fileleft="$15/frame_left_"{$name+1}$end fileright="$15/frame_right_"{$name+1}$end
 else  if $13!=15 filename="$15/frame_"{$index+1}$end
 else  filename="$15/depthmap_"{$index+1}$end fi fi

 repeat $frames

 if $13==14" && "$flag3d==1
 output[$index] $fileright
 output[{$index+$frames}] $fileleft
 index={$index+1} name={$name+1}
 fileleft="$15/frame_left_"{$name+1}$end fileright="$15/frame_right_"{$name+1}$end

 else
 output[$index] $filename
 index={$index+1} if $13!=15 filename="$15/frame_"{$index+1}$end else filename="$15/depthmap_"{$index+1}$end fi
 fi

 done rv

 fi

 ####batch based conversion####

 else

 # load images in batch mode

 if $31==0 end=".png" else end=".bmp" fi
 infile={$29} inpath="$27/$28"$infile""$end"" outfile={$29}
 frames={{$30-$29}+1} counter=1

 if $34!=0" || "$35!=0
 if $34>=$frames-$35" || "$35>=$frames-$34 error[] "Fade out of frame range"
 fi fi

 if $41==2
 inpathleft="$27/$28""left_"$infile$end inpathright="$27/$28""right_"$infile$end
 fi

 av=1 var=1 avprev=1 varprev=1

 repeat $frames

 if $41!=2

 rm input[0] $inpath
 if $24==0 [0]
 else infile2={$infile+$24}
 if $infile2<=$29 infile2={$29} fi
 if $infile2>=$30 infile2={$30} fi
  inpath2="$27/$28"$infile2""$end""
 input[1] $inpath2 fi

 else
 rm input[0] $inpathleft
 input[1] $inpathright
 fi

 size1={w} size2={h}

 # image stream alignment and 2D filtering only modes

  flag3d=0 if $41==3 flag3d=1 fi if $41!=2" && "$41!=3

 if !($2==0" && "$3==0" && "$1==24" && "$13==14" && "$32!=0) flag3d=1

 # prepare images

 if $13!=14 channels[0,1] 0,2 fi

 # create depth map

 if $40==0" || "$40==1
 av={0,ia} var={0,iv} diffav={{$av-$avprev}/$avprev*100} diffvar={{$var-$varprev}/$varprev*100}
 if abs($diffav)>=10" || "abs($diffvar)>=10 scenechange=1 else scenechange=0 fi
 if $counter==1" || "$scenechange==1" || "$counter/$36==round($counter/$36,1)
 +fx_tk_depthmap[0] $1,$4,$5,$6,$7,$8,$9,$38,$39,{w*{$37/1000}} r. $size1,$size2
 if $av!=0 avprev=$av fi if $var!=0 varprev=$var fi
 if $36!=1 filename="$15/depthmap_temp.png"
 output. $filename fi
 else
 filename="$15/depthmap_temp.png"
 input. $filename
 fi
 fi

 if $40==1
 infilec="correction.png" inpathc="$27/"$infilec""
 input. $inpathc
 compose_rgba[-1,-2]

 elif $40==2
 infilec="depthmap.png" inpathc="$27/"$infilec""
 input. $inpathc

 elif $40==3
  infilec="depthmap_"$infile".png" inpathc="$27/depthmaps/"$infilec""
 input. $inpathc
 fi

 # motion analysis

 if $10!=0 if $infile!=$29

 [0]
 infilemov={$infile-1} inpathmov="$27/$28"$infilemov""$end""
 input. $inpathmov
 compose_difference[-1,-2] luminance. n. 0,255
 ir. 0,{{$37/2}+1} negate. n. 0,255

 if $infile>=$29+2
  infilemov2={$infile-2} inpathmov2="$27/$28"$infilemov2""$end""
 input. $inpathmov2
  infilemov3={$infile-1} inpathmov3="$27/$28"$infilemov3""$end""
 input. $inpathmov3
 compose_difference[-1,-2] luminance. n. 0,255
 ir. 0,1 n. 0,255 compose_darken[-1,-2]
 fi blur_xy. {w*{$37/1000}} rv[-1,-2]
 if $10>=0
 fx_compose_lighten[-1,-2] {abs($10)/5}
 else
 negate..
 fx_compose_darken[-1,-2] {abs($10)/5}
 fi

 fi fi

 # create second view

 if $13!=15

 if $41==0

 if $sw<=0 negate[2] fi

 if $34!=0 if $counter<=$34 sw={{$counter/$34}*$sw} sh={{$counter/$34}*$sh} fi fi
 if $35!=0 if $counter>=$frames-$35 sw={$sw*{{{$frames-$counter}+1}/$35}}
 sh={$sh*{{{$frames-$counter}+1}/$35}} fi fi

 r. 100%,100%,1,2 s. c f. 0 n.. 0,$sw a[-1,-2] c
 warp.. .,1 shift.. $sh,0 rm.

 else
 . r[-1,-2] 100%,100%,1,2
 s. c f. 0 n.. 0,{abs($sw/2)} a[-1,-2] c
 negate.. s.. c f.. 0 n... 0,{-abs($sw/2)} a[-2,-3] c
 warp[-4] ..,1 warp... .,1
 shift... $sh,0 rm[-1,-2]
 fi

 fi

 sh={-$2} sw={-$sh-$3}

 # autocrop frames

 if $20==1 if $13!=15
 if $sh>=0 z $sh,0,{w},{h} else z 0,0,{w+$sh},{h} fi
 if $sw>=0 z $sw,0,{w},{h} else z 0,0,{w+$sw},{h} fi
 fi fi

 #end image stream alignment and 2D mode bypass

 fi  fi

 if $41==3 fx_tk_deana[0] $37,{{$38*2}+0.1} to_rgb fi

 # apply custom filter

 if $32==1 if $13!=15 fx_custom_code[0,1] "$33",0,0,0 fi
 elif $32==2 if $13!=15 l[0] fx_custom_code "$33",0,0,0 done fi
 elif $32==3 if $13!=15 l[1] fx_custom_code "$33",0,0,0 done fi
 fi

 # align stereoscopic image

 if $12==1 ac[0,1] "fx_blackandwhite 0.3,0,0.6,0,0.1,0,1,1,0,0,0,0,0,0,2,0,0,0,16,4,0,0,0",rgb fi
 if $41==2" && "$13==14 error[] "Output format not allowed for image stream alignment"
 elif $41==3" && "$13==15 error[] "Output format not allowed for anaglyph video reconstruction"
 elif $41==2" && "$13==15 +fx_tk_depth_obtain[0,1] $11,{$37/100},{100-{$38*20}},{$39*20}
 if $32!=0 fx_custom_code[0,1,-1] "$33",0,0,0 fi k.
 elif $41!=2" && "$13==15 k.
 elif $41==3" && "$13==14 k[0,1]
 else fx_tk_stereoimage[0,1] $13,$11,$16,$17,$18,$19 fi

 # adjust output image streams

 if $13==14 apply_gamma $16 tk_fx_channel_processing 1,1,$17,0,0,0,100,256,0,0,1,10,7,0
 fx_mix_lab 1,0,0,$18,0,0,$18,0,0,0,2,0 fi

 # resize frame to output format

 if $21==1 if $13!=13
 if $23==0   r $22,{$22*0.75},1,{s},6
 elif $23==1 r $22,{{$22*9}/16},1,{s},6
 elif $23==2 r $22,{{$22*2}/3},1,{s},6
 elif $23==3 r $22,{$22*0.5},1,{s},6
 elif $23==4 r $22,{{$22*9}/21},1,{s},6
 elif $23==5 r $22,{$22*{h/w}},1,{s},6
 fi fi fi c 0,255

 # save frame to folder

 if $13==14" && "$flag3d==1
 fileleft="$15/frame_left_"$outfile$end fileright="$15/frame_right_"$outfile$end
 else  if $13!=15 filename="$15/frame_"$outfile$end
 else  filename="$15/depthmap_"$outfile$end fi fi

 if $13==14" && "$flag3d==1
 output[0] $fileleft output[1] $fileright
 else output[0] $filename
 fi
 outfile={$outfile+1}

 # end batch processing loops and delete temporary file

 infile={$infile+1} inpath="$27/$28"$infile""$end""
 if $41==2 inpathleft="$27/$28""left_"$infile$end inpathright="$27/$28""right_"$infile$end fi

 counter={$counter+1} done fi

 if $_previewflag==0" && "$26==1 if $36!=1
 if ${-is_windows} path="$15" path=${path}{`92`}
 x "cd \""$path"\" && del depthmap_temp.png"
 else file="$15/depthmap_temp.png" x "rm -f \"$file\"" fi
 fi fi
 #####preview function####

 fx_tk_video3D_preview :

 shpre={$2*{400/$22}} swpre={$3*{400/$22}}

 if $26==0

 #####preview layer mode###

 if $!==1 fc[0] 255,0,128,255 k[0] text "Select multiple layer",10,80%,24,1,0,0,0,255
 text "input mode ALL.",10,90%,24,1,0,0,0,255

 elif $41==2 fc[0] 255,0,128,255 k[0] text "Alignment of image streams",10,80%,24,1,0,0,0,255
 text "in BATCH processing mode only!",10,90%,24,1,0,0,0,255

 elif $41==3 fc[0] 255,0,128,255 k[0] text "Anaglyph video reconstruction",10,80%,24,1,0,0,0,255
 text "in BATCH processing mode only!",10,90%,24,1,0,0,0,255

 else
 _previewflag=1

 if $40==3 if $42==0 _mapin=1 elif $42==1 _mapin={$!} elif $42==2  _mapin=$43 fi fi
 if $42==0 nr=1 pv={-1} elif $42==1 nr={$!} pv={-$!} elif $42==2" || "$42==3 nr=$43 pv={-$43} fi
 if $42==2" || "$42==3 if $43>=$! nr={$!} pv={-$!} _mapin={$!} fi fi

 if $42!=3
 fx_tk_video3D[$pv] $1,$shpre,$swpre,${4-9},0,${11-13},0,"$15",${16-23},0,${25-26},"$27","$28",${29-32},"$33",0,0,${36-39},0,${41-43} k[$pv]
 text[0] "layer "{``$nr},20,75%,{h*0.1},1,255,{if({{$13==2}||{$13==3}||{$13==15}},0,255)},0,255
 if $24!=0 text "For preview with frames offset ",20,70%,{h*0.05},1,255,{if({$13==15},0,255)},{if({$13==15},0,255)},255
 text "use full layer stack preview mode!",20,85%,{h*0.05},1,255,{if({$13==15},0,255)},{if({$13==15},0,255)},255 fi
 if $34!=0" || "$35!=0 text "For fade in/out effect preview",20,65%,{h*0.05},1,255,{if({$13==15},0,255)},{if({$13==15},0,255)},255
 text "use full layer stack preview mode!",20,85%,{h*0.05},1,255,{if({$13==15},0,255)},{if({$13==15},0,255)},255  fi
 if $40!=0 text "For preview with custom depth correction ",20,60%,{h*0.05},1,255,{if({$13==15},0,255)},{if({$13==15},0,255)},255
 text "use full layer stack preview mode!",20,85%,{h*0.05},1,255,{if({$13==15},0,255)},{if({$13==15},0,255)},255 fi
 if $10!=0 text "For preview with motion analyzer ",20,55%,{h*0.05},1,255,{if({$13==15},0,255)},{if({$13==15},0,255)},255
 text "use full layer stack preview mode!",20,85%,{h*0.05},1,255,{if({$13==15},0,255)},{if({$13==15},0,255)},255 fi
 if $32==2" || "$32==3 text[0] "Separate stream filtering ignored in layer mode",20,50%,{h*0.05},1,255,255,0,255 fi

 else
 fx_tk_video3D $1,$shpre,$swpre,${4-13},0,"$15",${16-26},"$27","$28",${29-32},"$33",${34-43} k[$pv]
 fi

 text[0] "layer "{``$nr},20,75%,{h*0.1},1,255,{if({{$13==2}||{$13==3}||{$13==15}},0,255)},0,255
 if $2==0" && "$3==0" && "$1==24" && "$13==14" && "$32!=0 text[0] "2D filter mode on!",50%,75%,{h*0.075},1,255,255,0,255 fi
 if $36!=1 text "Key frame settings ignored in layer processing mode. ",20,50%,{h*0.05},1,255,255,0,255 fi

 _previewflag=0
 fi

 else

 ####preview batch mode####

 _previewflag=2

 if $42==3

 +fc[0] 255,0,128,255 k.
 text "No preview available",20,50,28,1,0,0,0,255
 text "for batch input stack!",20,80,28,1,0,0,0,255
 text "Please select frame to adjust settings.",20,150,16,1,0,0,0,255

 elif $42==2" && "($43<=$29-1" || "$43>=$30+1) fc[0] 255,0,128,255 k[0]
 text[0] "Selected frame out of range! ",10,80%,24,1,0,0,0,255

 elif $41==2" && "$13==14 fc[0] 255,0,128,255 k[0]
 text[0] "Output format not allowed!",10,80%,24,1,0,0,0,255

 elif $41==3" && "$13==15 fc[0] 255,0,128,255 k[0]
 text[0] "Output format not allowed!",10,80%,24,1,0,0,0,255

 else

 rm
 if $31==0 end=".png" else end=".bmp" fi

 if $42==0  infile={$29}
 if $34!=0 swpre={{1/$34}*$swpre} shpre={{1/$34}*$shpre} fi

 elif $42==1 infile={$30}
 if $35!=0 swpre={{1-{1/$35}}*$swpre} shpre={{1-{1/$35}}*$shpre} fi

 elif $42==2 infile={$43}
 if $34!=0" || "$35!=0}
 if $43<=$29+$34 swpre={{$43/$34}*$swpre} shpre={{$43/$34}*$shpre} fi
 if $43>=$30-$35 swpre={{$30-$43}*{$swpre/$35}} shpre={{$30-$43}*{$shpre/$35}} fi

 fi

 fi

 if $41!=2

 inpath1="$27/$28"$infile""$end""
 input[0] $inpath1

 if $24!=0 infileoff={$infile+$24}
 if $infileoff<=$29 infileoff={$29} fi
 if $infileoff>=$30 infileoff={$30} fi
  inpathoff="$27/$28"$infileoff""$end""
 input[1] $inpathoff
 fi

 if $infile!=$29 if $10!=0
 infilemov={$infile-1} inpathmov="$27/$28"$infilemov""$end""
 input. $inpathmov

 if $infile>=$29+2
  infilemov2={$infile-2} inpathmov2="$27/$28"$infilemov2""$end""
 input. $inpathmov2
  infilemov3={$infile-1} inpathmov3="$27/$28"$infilemov3""$end""
 input. $inpathmov3
 fi fi fi

 else
  inpathleft="$27/$28""left_"$infile$end inpathright="$27/$28""right_"$infile$end
 rm input[0] $inpathleft
 input[1] $inpathright
 fi

 if $42==0 _mapin=$29 elif $42==1 _mapin=$30 elif $42==2 _mapin=$43 fi

 framesn={{$30-$29}+1}
 if ($34!=0" || "$35!=0)" && "($34>=$framesn-$35" || "$35>=$framesn-$34) fc[0] 255,0,128,255 k[0]
 text "Fade out of frame range! ",10,80%,{h*0.1},1,0,0,0,255
 else
 if $41==2" && "$13==15 +fx_tk_depth_obtain[0,1] $11,{$37/100},{100-{$38*20}},{$39*20}
 if $32!=0 fx_custom_code[0,1,-1] "$33",0,0,0  fi k.
 else
 fx_tk_video3D $1,$shpre,$swpre,${4-9},{if({$infile==$29},0,$10)},${11-13},0,"$15",${16-25},0,"$27","$28",${29-31},{if({{$2==0}&&{$3==0}&&{$1==24}&&{$13==14}&&{$32!=0}},2,$32)},"$33",0,0,1,${37-43}
 fi to_rgb if $13==14 k. fi

 text[0] "frame "{``$infile},20,75%,{h*0.1},1,255,{if({{$13==2}||{$13==3}||{$13==15}},0,255)},0,255
 if $41!=2 if $36!=1 if $40==0" || "$40==1 text[0] "Preview always forced to key frame. ",20,50%,{h*0.05},1,255,255,0,255 else
 text[0] "No keyframe computation for individual maps. ",20,64%,{h*0.05},1,255,255,0,255 fi fi fi
 if $2==0" && "$3==0" && "$1==24" && "$13==14" && "$32!=0 text[0] "2D filter mode on!",50%,75%,{h*0.075},1,255,255,0,255 fi

 fi fi fi

 _previewflag=0

#************END OF FILTER***************
#****************************************
#lenticular print
#****************************************

#@gui Lenticular Print : fx_tk_lenticular, fx_tk_lenticular(1)
#@gui : sep = separator()
#@gui : Lenticular Density LPI = float(30,5,200)
#@gui : Lenticular Orientation = choice("vertical","horizontal")
#@gui : Print Size Width = float(5,1,50)
#@gui : Print Size Unit = choice("inch","centimeter")
#@gui : Print Adjustment Marks = bool(1)
#@gui : Automatic Upscale for Optimum Results = bool(0)
#@gui : sep = separator(), note = note("<small>Author: <i>Tom Keil</i>.      Latest update: <i>2011/10/06</i>.</small>")
##@gui : note = link("Filter explained here",http://www.tkfilter.bplaced.net/TKFilter%20tutorials%202Dto3D%203D-automatic%20stereoscopic%20conversion.html)

fx_tk_lenticular :

 if $!<=1 return fi
 frames={$!} index=0 if $4==0 length=$3 else length={$3/2.54} fi
 lenses={$length*$1} lensewidth={w/$lenses}
 picstripe={$lensewidth/$frames} x=0 y=0 end={$picstripe}
 step={$lensewidth-$picstripe}

 #automatic upscale

 if $6==1
 if $picstripe!=int($picstripe) scale={{int($picstripe)+1}/$picstripe}
 r {w*$scale},{h*$scale} lensewidth={w/$lenses} picstripe={$lensewidth/$frames}
 end={$picstripe} step={$lensewidth-$picstripe} fi fi

#generate mask

 to_rgb +fc. 255,255,255 repeat $lenses
 if $2==0
 fill. if(x>=$end,0,i) x={$x+$step} end={$end+$step}
 fill. if(x>=$end,255,i) x={$x+$picstripe} end={$end+$picstripe}
 else
 fill. if(y>=$end,0,i) y={$y+$step} end={$end+$step}
 fill. if(y>=$end,255,i) y={$y+$picstripe} end={$end+$picstripe}
 fi done

#shift mask to position and apply on frames

 repeat $frames-1 +to_gray. ir. 128,256 n. 0,255
 if $2==0 shift. {{$picstripe}*{$frames-{$index+1}}}
 else shift. 0,{{$picstripe}*{$frames-{$index+1}}} fi
 s[$index] c a[$index,{$index+1},{$index+2},-1] c
 index={$index+1} done

#compose all layers

 repeat $frames-1 rv[0,-2] compose_rgba[0,-2] rv[0,-2] done

#create adjustment marks

 if $5==1 to_rgba[0]
 if $2==0 shift[0] 0,5 else shift[0] 5,0 fi
 negate. rv compose_rgba else rm. fi

#************END OF FILTER***************

#****************************************
#       STEREOGRAM
#****************************************

#@gui Single Image Stereogram : fx_tk_stereogram, fx_tk_stereogram_preview(1)
#@gui : sep = separator()
#@gui : Deviation = float(50,0,200)
#@gui : sep = separator(), note = note("Pattern generator")
#@gui : Pattern Variation 1 = float(0.5,0,1)
#@gui : Pattern Variation 2 = float(10,0,20)
#@gui : Pattern Variation 3 = float(0,0,1)
#@gui : Tiles = int(40,10,100)
#@gui : Color 1 = color(255,255,0)
#@gui : Color 2 = color(255,0,0)
#@gui : Color 3 = color(0,255,0)
#@gui : Color 4 = color(0,0,255)
#@gui : Color Strength = float(0.5,0,1)
#@gui : sep = separator(), Preview type = choice("Full","Forward horizontal","Forward vertical","Backward horizontal","Backward vertical","Duplicate top","Duplicate left","Duplicate bottom","Duplicate right","Duplicate horizontal","Duplicate vertical","Checkered","Checkered inverse")
#@gui : sep = separator(), note = note("<small>Author: <i>Tom Keil</i>.      Latest update: <i>2012/25/02</i>.</small>")
#@gui : note = note("Input image should be a <b>depth map</b> which is turned into an autostereogram, also known as magic eye image")
##@gui : note = link("Filter explained here",http://www.tkfilter.bplaced.net/TKFilter%20filter.html)
#@gui : note = link("Background explained here","http://en.wikipedia.org/wiki/Autostereogram")

fx_tk_stereogram :

repeat $! l[$>] to_gray +fc. 255,255,255
fx_plasma. $2,$3,8,0,0,128,128,128
fx_array. 10,10,0,0,0,0
fx_array_fade. {$5/10},{$5/10},0,0,80,90,3,0
r. [0],[0]
fx_noise. {w/30},0,3,0,0
+fx_rorschach. $4,1,0 rv[-1,-2] fx_compose_multiply[-1,-2] 0.5
+fx_corner_gradient. $6,$7,$8,255,$9,$10,$11,255,$12,$13,$14,255,$15,$16,$17,255
rv[-1,-2] fx_compose_hardlight[-1,-2] $18
rv[-1,-2]
r. 100%,100%,1,2
s. c f. 0 n.. 0,$1 a[-1,-2] c
warp.. .,1
rm. done done

fx_tk_stereogram_preview :
 gui_split_preview "fx_tk_stereogram ${1--2}",$-1
#*******END OF FILTER********************
#****************************************
#Stereoscopic image alignment
#****************************************

#@gui Stereoscopic Image Alignment : fx_tk_stereoimage, fx_tk_stereoimage(1)
#@gui : sep = separator()
#@gui : Mode = choice("Anaglyph red/cyan","Anaglyph red/cyan optimized","Anaglyph blue/yellow","Anaglyph blue/yellow optimized","Anaglyph green/magenta","Anaglypgh green/magenta optimized","Full side by side keep width","Full side by side keep uncompressed","Full bottom/top","Half side  by side","Half bottom/top","Interlace horizontal","Interlace vertical","Full HD frame packing")
#@gui : Flip Left / Right = bool(0)
#@gui : Gamma Compensation = float(1,0,4)
#@gui : Anti-Ghosting = float(0,0,255)
#@gui : Color Boost = float(1,0,4)
#@gui : Anaglyph Glasses Adjustment = float(0,-100,100)
#@gui : sep = separator()  note = note("This filter needs two aligned input images.")
#@gui : sep = separator(), note = note("<small>Author: <i>Tom Keil</i>     Latest update: <i>2012/04/08</i>.</small>")
fx_tk_stereoimage :
 if $!<=1 return fi
 local to_rgb

# if $4!=0 tk_fx_channel_processing 1,1,$4,0,0,0,100,256,0,0,1,10,7,0 fi
 if $1==0" || "$1==1" || "$1==2" || "$1==3" || "$1==4" || "$1==5 apply_gamma $3 fi
 if $1==0 if $2==0 rv[-1,-2] fi s c

 rm[-3,-4,-5] a[-1,-2,-3] c

 elif $1==1 if $2==1 rv[-1,-2] fi
 apply_gamma. 1.15 apply_gamma.. 1.0 s c
 rlr=456 rlg=500 rlb=176 rrr={-43} rrg={-88} rrb={-2}
 glr={-40} glg={-38} glb={-16} grr=378 grg=734 grb={-18}
 blr={-15} blg={-21} blb={-5} brr={-72} brg={-113} brb=1226
 [0-5]
 *... $rlr *.. $rlg *. $rlb *[-6] $rrr *[-5] $rrg *[-4] $rrb
 +[-6] [-5] +[-6] [-4] +[-6] ... +[-6] .. +[-6] . rm[-1--5]
 /. 1000 n. 0,255 to_gray.
 [0-5]
 *... $glr *.. $glg *. $glb *[-6] $grr *[-5] $grg *[-4] $grb
 +[-6] [-5] +[-6] [-4] +[-6] ... +[-6] .. +[-6] . rm[-1--5]
 /. 1000 n. 0,255 to_gray.
 [0-5]
 *... $blr *.. $blg *. $blb *[-6] $brr *[-5] $brg *[-4] $brb
 +[-6] [-5] +[-6] [-4] +[-6] ... +[-6] .. +[-6] . rm[-1--5]
 /. 1000 n. 0,255 to_gray.
 k[-1--3] a[-1,-2,-3] c

 elif $1==2 if $2==0 rv[-1,-2] fi s c
 rm[-6,-5,-1] mv[0] 3  a[-1,-2,-3] c

 elif $1==3 if $2==1 rv[-1,-2] fi
 apply_gamma. 0.9 apply_gamma.. 1.25 s c
 rrr=1062 rrg={-205} rrb=299 rlr={-16} rlg={-123} rlb={-17}
 grr={-26} grg=908 grb=68 glr=6 glg=62 glb={-17}
 brr={-38} brg={-173} brb=22 blr=94 blg=185 blb=911
 [0-5]
 *... $rlr *.. $rlg *. $rlb *[-6] $rrr *[-5] $rrg *[-4] $rrb
 +[-6] [-5] +[-6] [-4] +[-6] ... +[-6] .. +[-6] . rm[-1--5]
 /. 1000 n. 0,255 to_gray.
 [0-5]
 *... $glr *.. $glg *. $glb *[-6] $grr *[-5] $grg *[-4] $grb
 +[-6] [-5] +[-6] [-4] +[-6] ... +[-6] .. +[-6] . rm[-1--5]
 /. 1000 n. 0,255 to_gray.
 [0-5]
 *... $blr *.. $blg *. $blb *[-6] $brr *[-5] $brg *[-4] $brb
 +[-6] [-5] +[-6] [-4] +[-6] ... +[-6] .. +[-6] . rm[-1--5]
 /. 1000 n. 0,255 to_gray.
 k[-1--3] a[-3,-2,-1] c

 elif $1==4 if $2==0 rv[-1,-2] fi  s c
 rm[-1,-3,-5] mv. -2 a[-3,-2,-1] c

 elif $1==5 if $2==1 rv[-1,-2] fi  s c
 apply_gamma. 1 apply_gamma.. 1.15 s c
 rrr={-62} rrg={-158} rrb={-39} rlr={529} rlg={705} rlb={24}
 grr={284} grg=668 grb=143 glr={-16} glg={-15} glb={-65}
 brr={-15} brg={-27} brb=21 blr=9 blg=75 blb=937
 [0-5]
 *... $rlr *.. $rlg *. $rlb *[-6] $rrr *[-5] $rrg *[-4] $rrb
 +[-6] [-5] +[-6] [-4] +[-6] ... +[-6] .. +[-6] . rm[-1--5]
 /. 1000 n. 0,255 to_gray.
 [0-5]
 *... $glr *.. $glg *. $glb *[-6] $grr *[-5] $grg *[-4] $grb
 +[-6] [-5] +[-6] [-4] +[-6] ... +[-6] .. +[-6] . rm[-1--5]
 /. 1000 n. 0,255 to_gray.
 [0-5]
 *... $blr *.. $blg *. $blb *[-6] $brr *[-5] $brg *[-4] $brb
 +[-6] [-5] +[-6] [-4] +[-6] ... +[-6] .. +[-6] . rm[-1--5]
 /. 1000 n. 0,255 to_gray.
 k[-1--3] a[-3,-2,-1] c

 elif $1==6 if $2==1 rv[-1,-2] fi
 r[-1,-2] 50%,50%,1,3,6 a[-1,-2] x

 elif $1==7 if $2==1 rv[-1,-2] fi a[-1,-2] x

 elif $1==8 if $2==1 rv[-1,-2] fi a[-1,-2] y

 elif $1==9 if $2==1 rv[0,1] fi
 r[0,1] 50%,100%,1,3,6 a[0,1] x
 elif $1==10 if $2==1 rv[0,1] fi
 r[0,1] 100%,50%,1,3,6 a[0,1] y

 elif $1==11 to_rgba[0,1]
 if $2==1 rv[0,1] fi
 fill[0] if(y%2==0,0,i) rv[0,1] compose_rgba[0,1] to_rgb

 elif $1==12 to_rgba[0,1]
 if $2==1 rv[0,1] fi
 fill[0] if(x%2==0,0,i) rv[0,1] compose_rgba[0,1] to_rgb

 elif $1==13
 if $2==1 rv[0,1] fi
 r[0,1] 1920,1080,1,3,6 +fc. 0,0,0 r. 1920,45
 rv[-1,-2] a[-1,-2] y a[-1,-2] y

 fi c 0,255

 if $1==6" || "$1==7" || "$1==8" || "$1==9" || "$1==10" || "$1==11" || "$1==12" || "$1==13
 apply_gamma $3 fi
 fx_mix_lab 1,0,0,$5,0,0,$5,0,0,0,2,0
 if $1==0" || "$1==1 fx_mix_rgb 1,$6,0,1,0,0,1,0,0,0,2,0 fi
 if $1==2" || "$1==3 fx_mix_rgb 1,0,0,1,0,0,1,$6,0,0,2,0 fi
 if $1==4 fx_mix_rgb 1,0,0,1,$6,0,1,0,0,0,2,0 fi
 if $1==5 fx_mix_rgb 1,0,0,1,$6,0,1,{if({$6>=0},$6,0)},0,0,2,0 fi

 done

#************END OF FILTER***************
#****************************************
#depth map construction
#****************************************

#@gui Depth Map Construction : fx_tk_depthmap, fx_tk_depthmap(1)
#@gui : sep = separator()
#@gui : note = note("This filter estimates and constructs a depth map for a 2D image ")
#@gui : Scene Selector = choice("automatic depth estimation","daylight scene","optimized lateral inhibition","light motive","dark  motive","landscape","center foreground","center background","left  foreground","left diagonal foreground","right foreground","right diagonal  foreground","left and right foreground","left and right background","bottom and top foreground","bottom and left foreground","bottom and right foreground","central  perspective outdoor","central perspective indoor","portrait","human 1","human  2","studio","underwater","flat")
#@gui : Depth Field Control = float(20,0,100)
#@gui : Feature Analyzer Threshold = float(0,0,5)
#@gui : Feature Analyzer Smoothness = float(0,0,5)
#@gui : Local Detail Enhancer = float(0,0,5)
#@gui : DOF Analyzer = float(0,0,5)
#@gui : Frequency Analyzer = float(0,0,5)
#@gui : Preprocessor Radius = float(0,0,5)
#@gui : Preprocessor Power = float(0,0,5)
#@gui : Smoothing = float(0,0,100)
#@gui : sep = separator(), note = note("<small>Author: <i>Tom Keil</i>       Latest update: <i>2012/30/07</i>.</small>")

fx_tk_depthmap :

 repeat $! l[$>] to_rgb size1={w} resize2dx 400,2
 if $8!=0 fx_map_tones_fast {$8*4},{$9/5},3,0 fi
 if $1==0 +fx_tk_autodepth.
 +luminance[0] fx_map_tones. 1,0.25,0,30,3,0
 rv[-1,-2] fx_compose_value[-1,-2] 0.15
 tk_fx_channel_processing. 1,{$2/20},0,0,0,0,100,256,0,0,0,2,0,0
 elif $1==1 +channels[0] 2
 tk_fx_channel_processing. 1,{{$2/25}+0.1},0,0,0,0,100,256,0,1,0,2,0,0
 +fx_linear_gradient. 0,0,0,255,255,255,255,255,0,90,0,{100-{$2/1.5}}
 rv[-1,-2] fx_compose_lighten[-1,-2] {0.5+{$2/200}}
 elif $1==2 +s. c fx_dog. 0.4,0,0,0,0
 negate..  fx_dog... 0.4,0,0,0,0
 fx_compose_alpha[-1,-2] 0.44,0
 fx_compose_alpha[-1,-2] 0.44,0
 tk_fx_channel_processing. 1,{$2/20},0,0,0,0,100,256,0,0,0,2,0,0
 elif $1==3 +luminance.
 tk_fx_channel_processing. 1,{$2/25},0,0,0,0,100,256,0,0,0,2,0,0
 elif $1==4 +luminance. negate.
 tk_fx_channel_processing. 1,{$2/25},0,0,0,0,100,256,0,0,0,2,0,0
 elif $1==5
 +fx_linear_gradient. 0,0,0,255,255,255,255,255,0,90,0,{100-$2}
 elif $1==6
 +fx_radial_gradient. 0,0,0,255,255,255,255,255,1,$2,100,50,50
 elif $1==7
 +fx_radial_gradient. 0,0,0,255,255,255,255,255,0,0,{100-$2},50,50
 elif $1==8
 +fx_linear_gradient. 0,0,0,255,255,255,255,255,1,0,$2,100
 elif $1==9
 +fx_linear_gradient. 0,0,0,255,255,255,255,255,1,315,$2,100
 elif $1==10
 +fx_linear_gradient. 0,0,0,255,255,255,255,255,0,0,0,{100-$2}
 elif $1==11
 +fx_linear_gradient. 0,0,0,255,255,255,255,255,0,45,0,{100-$2}
 elif $1==12
 +fx_linear_gradient. 0,0,0,255,255,255,255,255,0,0,50,{100-{$2/2}}
 +fx_linear_gradient. 0,0,0,255,255,255,255,255,0,180,50,{100-{$2/2}}
 compose_lighten[-1,-2]
 elif $1==13
 +fx_linear_gradient. 0,0,0,255,255,255,255,255,1,180,100,{50+{$2/2}}
 +fx_linear_gradient. 0,0,0,255,255,255,255,255,0,180,{50-{$2/2}},0
 compose_darken[-1,-2]
 elif $1==14
 +fx_linear_gradient. 0,0,0,255,255,255,255,255,0,90,50,{100-{$2/2}}
 +fx_linear_gradient. 0,0,0,255,255,255,255,255,0,270,50,{100-{$2/2}}
 compose_lighten[-1,-2]
 elif $1==15
 +fx_linear_gradient. 0,0,0,255,255,255,255,255,0,180,50,{100-{$2/2}}
 +fx_linear_gradient. 0,0,0,255,255,255,255,255,0,90,50,{100-{$2/2}}
 compose_lighten[-1,-2]
 elif $1==16
 +fx_linear_gradient. 0,0,0,255,255,255,255,255,0,0,50,{100-{$2/2}}
 +fx_linear_gradient. 0,0,0,255,255,255,255,255,0,90,50,{100-{$2/2}}
 compose_lighten[-1,-2]
 elif $1==17
 +fx_linear_gradient. 0,0,0,255,255,255,255,255,0,0,50,{100-{$2/4}}
 +fx_linear_gradient. 0,0,0,255,255,255,255,255,0,180,50,{100-{$2/4}}
 compose_lighten[-1,-2]
 +fx_linear_gradient. 0,0,0,255,255,255,255,255,0,90,0,{100-{$2/2}}
 compose_lighten[-1,-2]
 elif $1==18
 +fx_linear_gradient. 0,0,0,255,255,255,255,255,0,0,50,{100-{$2/4}}
 +fx_linear_gradient. 0,0,0,255,255,255,255,255,0,180,50,{100-{$2/4}}
 compose_lighten[-1,-2]
 +fx_linear_gradient. 0,0,0,255,255,255,255,255,0,90,0,{100-{$2/4}}
 compose_lighten[-1,-2]
 +fx_linear_gradient. 0,0,0,255,255,255,255,255,0,270,50,{100-{$2/4}}
 compose_lighten[-1,-2]
 elif $1==19 +channels. 0
 tk_fx_channel_processing. 1,{$2/25},0,0,0,0,100,256,0,0,0,2,0,0
 +fx_radial_gradient. 0,0,0,255,255,255,255,255,1,$2,100,50,50
 rv[-1,-2] compose_multiply[-1,-2]
 elif $1==20
 +fx_gaussian_blur. $6,0,0,1,0,0,0
 fx_edges. {$4/2},{50-{$2/2}},1,0
 +fx_gradient_norm[0] {$4/2},{1.5-{$2/67}},0,{100-$2},0,0
 rv[-1,-2] compose_lighten[-1,-2] +channels[0] 0
 tk_fx_channel_processing. 1,{{$2/25}+1},0,0,0,0,100,256,0,0,0,2,0,0
 rv[-1,-2] compose_lighten[-1,-2]
 +fx_linear_gradient. 0,0,0,255,255,255,255,255,0,0,50,{100-{$2/4}}
 +fx_linear_gradient. 0,0,0,255,255,255,255,255,0,180,50,{100-{$2/4}}
 compose_lighten[-1,-2]
 +fx_linear_gradient. 0,0,0,255,255,255,255,255,0,90,0,{100-{$2/2}}
 compose_lighten[-1,-2] rv[-1,-2] compose_lighten[-1,-2]
 elif $1==21 +fx_gaussian_blur. $4,0,0,1,0,0,0
 fx_edges. {$4/2},{50-{$2/2}},1,0
 +fx_gradient_norm[0] {$4/2},{1.5-{$2/67}},0,{100-$2},0,0
 rv[-1,-2] compose_lighten[-1,-2] +channels[0] 0
 tk_fx_channel_processing. 1,{{$2/25}+0.5},0,0,0,0,100,256,0,0,0,2,0,0
 rv[-1,-2] compose_lighten[-1,-2]
 +fx_linear_gradient. 0,0,0,255,255,255,255,255,0,0,0,{100-$2}
 +fx_linear_gradient. 0,0,0,255,255,255,255,255,0,180,0,{100-$2}
 compose_darken[-1,-2] rv[-1,-2] compose_darken[-1,-2]
 +fx_linear_gradient. 0,0,0,255,255,255,255,255,0,90,75,{100-{$2/4}}
 rv[-1,-2] fx_compose_lighten[-1,-2] 0.5
 elif $1==22 +fx_gaussian_blur. $4,0,0,1,0,0,0
 fx_edges. {$4/2},{50-{$2/2}},1,0
 +fx_gradient_norm[0] {$4/2},{1.5-{$2/67}},0,{100-$2},0,0
 rv[-1,-2] compose_lighten[-1,-2] +channels[0] 0
 tk_fx_channel_processing. 1,{{$2/25}+0.5},0,0,0,0,100,256,0,0,0,2,0,0
 rv[-1,-2] compose_lighten[-1,-2]
 elif $1==23 +channels. 0
 tk_fx_channel_processing. 1,{$2/25},0,0,0,0,100,256,0,0,0,2,0,0
 elif $1==24 +fc. 0,0,0
 fi

 # analyze image features

 if $7!=0
 +fc[0] 128,128,128 +channels[0] 2 negate. c. 0,90
 n. 0,128 rv[-1,-2] compose_darken[-1,-2]
 +channels[0] 0 negate. c. 165,255 n. 128,255 rv[-1,-2]
 compose_hardlight[-1,-2] rv[-1,-2]
 if $1!=19 fx_compose_average[-1,-2] {$7/5}
 else fx_compose_value[-1,-2] {$7/5},0
 tk_fx_channel_processing. 1,{$2/25},0,0,0,0,100,256,0,0,0,2,0,0
 fi fi

 if $6!=0 +fx_highpass[0] 2,2,0,0,0
 tk_fx_replace_color. 5,0,128,128,128,255,0,0,0,255
 fx_morpho. 3,70,0,0,0,1,0   to_gray. av={ia}
 ir. $av,255 n. 0,255 blur_xy. 25
 rv[-1,-2] fx_compose_overlay[-1,-2] {$6/5} fi

 if $3!=0 +fx_isophotes[0] {{$3*3}+2},0,0,0
 fx_morpho. 3,{5-{$3/2}},0,0,0,1,0
 tk_fx_channel_processing. 1,1,255,0,0,0,100,256,0,0,0,2,0,0
 rv[-1,-2] fx_compose_overlay[-1,-2] {$3/10}
 +fx_gradient_norm[0] {$4*2},{1.5-{0.1+{$3/3.6}}},0,100,0,0
 rv[-1,-2] compose_lighten[-1,-2] fx_segment_watershed. $3,$4,0,0
 fi

 blur_y. $10 blur_x. {$10/2}

 if $5!=0 +luminance[0] fx_map_tones. 1,{0.25-{$5/20}},0,30,3,0
 rv[-1,-2] fx_compose_overlay[-1,-2] {$5/10} fi

 n. 0,255 rm[0] resize2dx $size1,2 done done

#*******END OF FILTER********************
#****************************************
#automatic depth estimation
#****************************************

#@gui Automatic Depth Estimation : fx_tk_autodepth, fx_tk_autodepth(1)
#@gui : sep = separator()
#@gui : note = note("This filter estimates a depth map from a 2D image by analyzing various monoscopic image properties.")
#@gui : sep = separator(), note = note("<small>Author: <i>Tom Keil</i>       Latest update: <i>2012/30/07</i>.</small>")

fx_tk_autodepth :

 repeat $! l[$>] to_rgb size1={w} resize2dx 400,2

 #coefficient settings

 whpos=128 blpos=128 rpos=255 gpos=200 blupos=200 crga=1.5 crmix1=0.5 crmix2=0.5 geocomp1=75 geocomp2=30
 geostr=0.3 focstr=0.3 featsize=60 featpos=128 feattr=35 tr=30 rtr=90 gtr=90 blutr=90 contstr=0.9
 featinfl=1 foctol=5 focmorph=70 focavt=85 focavt2=140 focvart=2000 latinhib=0.5

 #depth from gravity

 +fx_map_tones_fast. 10,0.5,0,0 luminance.
 fx_segment_watershed. 0.5,1,0  label. 5,0
 +fx_gradient_norm[0] 0,0.5,0,100,0,0 compose_lighten[-1,-2]
 fx_segment_watershed. 0.5,1,0 label. 5,0 n. 0,255

 #depth from luminance and compensate over/underexposed areas

 +luminance[0]

 +channels[0] 1 ir. $gtr%,100%
 fx_morpho. 2,2,0,0,0,1,0 n. 0,$gpos
 tk_fx_replace_color. 1,0,0,0,0,255,0,0,0,0  blend[-1,-2] alpha

 +channels[0] 0 ir. $rtr%,100%
 fx_morpho. 2,2,0,0,0,1,0 n. 0,$rpos
 tk_fx_replace_color. 1,0,0,0,0,255,0,0,0,0 blend[-1,-2] alpha

 +channels[0] 2 ir. $blutr%,100%  n. 0,$blupos
 fx_morpho. 2,2,0,0,0,1,0
 tk_fx_replace_color. 1,0,0,0,0,255,0,0,0,0
 to_rgba. +fx_linear_gradient. 0,0,0,255,255,255,255,255,0,90,0,100
 s.. c rv[-1,-2] compose_multiply[-1,-2] to_gray. a[-4,-3,-2,-1] c
 blend[-1,-2] alpha

 +channels[0] 0 +luminance[0] compose_average[-1,-2] ir. 80%,95%
 fx_morpho. 2,2,0,0,0,1,0 n. 0,$whpos
 tk_fx_replace_color. 1,0,0,0,0,255,0,0,0,0 blend[-1,-2] alpha

 +channels[0] 0 +luminance[0] compose_average[-1,-2] ir. 5%,20%
 fx_morpho. 2,2,0,0,0,1,0 n. 0,$blpos
 tk_fx_replace_color. 1,0,0,0,0,255,0,0,0,0 blend[-1,-2] alpha

 #depth from lateral inhibition

 +fx_gradient_norm[0] 0,0.5,0,50,0,0

 .
 fx_morpho. 2,$featsize,0,0,0,1,0
 ir. $feattr%,100%
 n. 0,$featpos
 blur_xy. 2
 fx_compose_lighten[-1,-2] $contstr
 blur_xy. 2

 #depth from color

 to_rgb[0] rgb2ycbcr[0] +channels[0] 2 ycbcr2rgb[0]
 n. 0,255 c. 25%,100%  apply_gamma. $crga

 +channels[0] 2 negate. c. 0,128
 to_rgba. +fx_linear_gradient. 0,0,0,255,255,255,255,255,0,270,0,100
 s.. c rv[-1,-2] compose_multiply[-1,-2] to_gray.
 a[-4,-3,-2,-1] c rv[-1,-2] fx_compose_darken[-1,-2] $crmix1

 #depth from geometry

 +luminance[0] fx_houghsketchbw. 10,5,15,$tr,1,1,0 complex={ia}
 if $complex>=$geocomp1
 do tr={$tr+10} rm. +luminance[0] fx_houghsketchbw. 10,5,15,$tr,1,1,0 complex={ia}
 while $complex>=$geocomp2" && "$tr<=90 fi
 fx_morpho. 3,5,0,0,0,1,0 blur_xy. 1 fx_distance. 255,0,1,1,0
 complex={ia}
 #depth from focus

 +fx_highpass[0] 2,2,0,0,0
 tk_fx_replace_color. $foctol,0,128,128,128,255,0,0,0,255
 fx_morpho. 3,$focmorph,0,0,0,1,0   to_gray.
 av={ia} var={iv}
 if $av<=$focavt" || "($av>=$focavt" && "$av<=$focavt2" && "$var<=$focvart)
 ir. $av,255 n. 0,255 blur_xy. 10 else fc. 128,128,128 fi

 #lateral inhibition emphaziser

 +fx_gradient_norm[0] 0,0.5,0,50,0,0
 #composing depth representations

 rm[0]
 fx_compose_overlay[-7,-6] 0.5

 fx_compose_overlay[-6,-5] $featinfl

 fx_compose_value[-5,-4] $crmix2

 rv[-4,-3]
 if $complex!=0 fx_compose_overlay[-4,-3] $geostr else rm... fi

 rv[-3,-2]
 fx_compose_overlay[-3,-2] $focstr

 rv[-2,-1]
 fx_compose_lighten[-1,-2] $latinhib
 #final segmentation and smoothing

 blur_xy. 2  fx_morpho. 3,20,0,0,0,1,0
 fx_segment_watershed. 15,0,0 n. 0,255

 blur_y. 2 blur_x. 1
 resize2dx $size1,2
 done done

#************END OF FILTER***************

#****************************************
# depth map reconstruction
#****************************************

#@gui Depth Map Reconstruction : fx_tk_depth_obtain, fx_tk_depth_obtain(1)
#@gui : note = note("This filter estimates a depth map from the left and the right view of a stereoscopic image. Images must be aligned correct to compute correct depth information.")
#@gui : Flip Left/Right = bool(0)
#@gui : Smoothness = float(0.1,0,1)
#@gui : Center Size = float(100,0,100)
#@gui : Center Smoothness = float(0,0,50)
#@gui : sep = separator(), note = note("<small>Author: <i>Tom Keil</i>       Latest update: <i>2012/04/09</i>.</small>")

fx_tk_depth_obtain :
 if $!<=1 return fi
 l
 to_rgb size1={w} size2={h} resize2dx 400,2
 if $1==1 rv fi
 if $3!=100
 fx_frame_round_old 10,{100-$3},$4,0,255,255,255,255,0,0.1,3
 fi
 displacement[0] [1],$2
 rm[1]
 channels 0
 n 0,255
 r $size1,$size2 done

#*******END OF FILTER*****************

#*************************************
#De-Anaglyph
#*************************************

#@gui De-Anaglyph : fx_tk_deana, fx_tk_deana(1)
#@gui : sep = separator()
#@gui : note = note("This filter reconstructs strereoscopic full colour views from anaglyphs")
#@gui : sep = separator()
#@gui : Colour Smoothing = float(20,0,100)
#@gui : Gamma Equalizer = float(2,0.1,10)
#@gui : sep = separator(), note = note("<small>Author: <i>Tom Keil</i>     Latest update: <i>2012/20/09</i>.</small>")

fx_tk_deana :
 repeat $! l[$>] to_rgb +s c rm.
 to_rgb[-1,-2] rgb2lab[-1,-2] channels[-1,-2] 0
 rgb2lab[0] s[0] c blur_x[1,2] $1
 c[-1,-2] {0,im},{0,iM}
 apply_gamma. {($2^({0,ia}/ia)-$2)*$2+1}
 apply_gamma.. {($2^({0,ia}/{-2,ia})-$2)*$2+1}
 [1,2] rm[0] mv[2] 0
 a[0,1,2] c a[1,2,3] c lab2rgb[0,1]
 done done

#************END OF FILTER************

#*******END OF DIRECTORY**************
#@gui _
#@gui _<b>Artistic</b>

#****************************************
# Photoillustration
#****************************************
#@gui Photoillustration: fx_tk_photoillustration,  fx_tk_photoillustration_preview(0)
#@gui : note = note("adding an illustrative effect to any photograph")
#@gui : sep = separator()
#@gui : Local Contrast Style = choice("tone mapping","tone mapping soft","tone mapping fast","local  normalisation","unsharp mask","global mapping","dynamic range increase","none")
#@gui : Local Contrast Effect = float(0.25,0.00,2.5)
#@gui : Smoothing Style = choice("anisotropic","bilateral","color channel  smoothing","segmentation","morphological closing","selective gaussian","wavelet","Kuwahara","none")
#@gui : Contour Precision = float(0.30,0.00,1.00)
#@gui : Area Smoothness = float(0.50,0.00,10.00)
#@gui : Sharpening Radius = float(0.50,0.00,10.00)
#@gui : Sharpening Strength = float(1.00,0.00,5.00)
#@gui : Special Effects = choice("none","soft glow","dusty","Orton glow","extra  smooth","bloom","paintstroke")
#@gui : Effect Strength = float(5.00,0.00,20.00)
#@gui : Overall Lightness = float(0,-50,50)
#@gui : Overall Contrast = float(1,0.5,1.5)
#@gui : Shadows Lightness = float(0,-100,100)
#@gui : Highlights Lightness = float(0,-100,100)
#@gui : Mid Tone Contrast = float(1,0.5,4)
#@gui : Color Green-Magenta = float(0,-20,20)
#@gui : Color Blue-Yellow = float(0,-20,20)
#@gui : Color Boost = float(1.2,0,4)
#@gui : Detail Reconstruction Detection = float (98.5,50,100)
#@gui : Detail Reconstruction Smoothness = float(5,0,10)
#@gui : Detail Reconstruction Strength = float(0.5,0,1)
#@gui : Detail Reconstruction Style = choice("micro/macro details  adjusted","fine","strong","high pass","artistic round","artistic hard","artistic  modern","comic Style","gritty","none")
#@gui : Keep Detail Layer Separate = bool(0)
#@gui : Remove Artifacts From Micro/Macro Detail = bool(0)
#@gui : Skin Tone Protection = bool(0)
#@gui : Sharpen Edges Only = bool(0)
#@gui : Computation Mode = choice(1,"high quality","normal","high speed")
#@gui : sep = separator(), Preview type = choice("Full","Forward  horizontal","Forward vertical","Backward horizontal","Backward vertical")
#@gui : sep = separator(), note = note("<small>Author: <i>Tom Keil</i>        Latest update: <i>2012/08/28</i>.</small>")
###@gui : note = link("Filter explained  here","http://www.tkfilter.bplaced.net/TKFilter%20tutorials%20Photoillustration.html")
fx_tk_photoillustration :
  repeat $! l[$>]
    if $26==1 scdo=50 scup=200 fi
    if $26==2 scdo=25 scup=400 fi
    if $26!=0 r $scdo%,$scdo% else fi
    if $21==0
      [^] +negate[1] [0] +negate[0]
      fx_gaussian_blur[2] {{{100-$18}/5}+0.5},0,0,1,0,0,0 fx_compose_dodge[1,2] 1
      if $23==1 fx_gaussian_blur[1] {{{100-$18}/10}+0.5},0,0,1,0,0,0 fi
      fx_gaussian_blur[3] {{{{{100-$18}/5}+1}*10}+10},0,0,1,0,0,0
      fx_compose_dodge[2,3] 1
      if $23==1 fx_gaussian_blur[2] {{{{100-$18}/10}+0.5}*3},0,0,1,0,0,0 fi
      reverse[1,2] fx_compose_multiply[1,2] {1-{$19/10}}
      tk_fx_channel_processing[1] {{1-$20}+0.1},1,0,0,0,0,100,256,0,0,0,2,7,0
    elif $21==1
      +fx_laplacian $19,{99.99-$18},$18,1,1,0
    elif $21==2
      +fx_gradient_norm $19,0.5,{99.99-$18},$18,1,0
    elif $21==3
      +fx_highpass {-{$18-100.3}},{{10-$19}*0.7},0,1,0
    elif $21==4
      +fx_pencilbw {100-$18},{$19*20},0,0,0
    elif $21==5
      +fx_hardsketchbw {300+{{$18-50}*15}},{$19*10},$19,1,{50-{$18/2}},0,0,0
    elif $21==6
      +fx_thin_edges $19,{{$18/5}-10},0,0
    elif $21==7
      +fx_edges {$19/3.5},{95-$18},0,0
      +fx_mix_hsv[0] 1,0,0,1,-1,0,1,0,0,0,2,0
      tk_fx_channel_processing[2] 1,1,0,{$19/10},4,{{$18-50}*2},100,256,0,0,0,2,7,0
      reverse[1,2] fx_compose_multiply[1,2] {0.5+{$20/2}}
    elif $21==8
      +channels 2
      if $19<=5 fx_unsharp[1] 1,{2-{{$19*0.3}+0.5}},20,{5-$19},0.00,1.00,0.5,1,0,7,0
      else fx_gaussian_blur[1] {$19-5},0,0,1,0,0,0
      fi
    fi

    if $1!=3
#      tk_fx_channel_processing[0] 1,1,$12,0,0,0,100,256,0,0,1,{abs($12/10)},7,0
#      tk_fx_channel_processing[0] 1,1,$13,0,0,0,100,256,0,0,3,{abs($12/10)},7,0
    fi

    if $24==0
      if $1==0
        fx_map_tones[0] {$2/2.5},{1-{$2/2.5}},$2,{2+{$2*80}},3,0
      elif $1==1
        fx_map_tones[0] {$2/10},0.5,{10-{$2*2}},300,3,0
      elif $1==2
        fx_map_tones_fast[0] {$2*2},{$2/2.5},3,0
      elif $1==3
        fx_normalize_local[0] {$2*2},{1+{$2*25.2}},{$2*16},{$2*16},0,3,0
      elif $1==4
        fx_unsharp[0] 0,{{w+h}/100},0,$2,0,1,1,1,0,7,0
      elif $1==5
        +negate[0]
        if $21!=9 reverse[1,2] fi
        fx_gaussian_blur[1] {{{w+h}/5}-{$2*{{w+h}/12.5}}},0,0,1,0,0,0
        to_gray[1] reverse[0,1] fx_compose_softlight[0,1] {$2/2.5}
      elif $1==6
        fx_tk_dri[0] {$2/2.5},{$2/5},{$2/2.5},{$2*2},{$2/2.5},1,1,0
      fi
    else
      +to_rgba[0] +channels[0] 0
      if $21!=9 move[1] 4 fi
      negate[2]
      tk_fx_channel_processing[2] 1,1,2,0,0,0,100,256,0,0,0,2,7,0
      fx_gaussian_blur[2] {{w+h}/500},0,0,1,0,0,0
      to_gray[2]
      if $1==0
        fx_map_tones[1] {$2/2.5},{1-{$2/2.5}},$2,{2+{$2*80}},3,0
      elif $1==1
        fx_map_tones[1] {$2/10},0.5,{10-{$2*2}},300,3,0
      elif $1==2
        fx_map_tones_fast[1] {$2*2},{$2/2.5},3,0
      elif $1==3
        fx_normalize_local[1]  {$2*2},{1+{$2*25.2}},{$2*16},{$2*16},0,3,0
      elif $1==4
        fx_unsharp[1] 0,100,0,$2,0,1,1,1,0,7,0
      elif $1==5
        negate[1] fx_gaussian_blur[1]  {{{w+h}/5}-{$2*{{w+h}/12.5}}},0,0,1,0,0,0
        to_gray[1] to_rgba[1]
      elif $1==6
        fx_tk_dri[1] {$2/2.5},{$2/5},{$2/2.5},{$2*2},{$2/2.5},1,1,0 to_rgba[1]
      fi
      split[1] c
      if $21!=9 reverse[4,5] compose_multiply[4,5] append[-5,-4,-3,-2] c
      else reverse[3,4] compose_multiply[3,4] append[-4,-3,-2,-1] c
      fi
      if $1!=3 compose_rgba[0,1]
      else reverse[0,1] fx_compose_softlight[0,1] {$2/2.5}
      fi
    fi

    tk_fx_channel_processing[0] 1,$11,$10,0,0,0,100,256,0,0,0,2,7,0
#    tk_fx_channel_processing[0] 1,$14,0,0,0,0,100,256,0,0,2,{abs($14*2.5)},7,0
    if $1==3
#      tk_fx_channel_processing[0] 1,1,$12,0,0,0,100,256,0,0,1,{abs($12/10)},7,0
#      tk_fx_channel_processing[0] 1,1,$13,0,0,0,100,256,0,0,3,{abs($12/10)},7,0
    fi
    if $3==0 fx_smooth_anisotropic[0] {$5*100},{$4*2},$4,$5,$5,0.80,30.00,2.0,0,1,1,0,1,0
    elif $3==1 fx_smooth_bilateral[0] {100-{$4*100}},{$5*25},1,0,0
    elif $3==2 fx_gaussian_blur[0] {$5*10},0,0,1,8,0,0
    elif $3==3 fx_segment_watershed[0] {$4*5},{$5/2},0,0
    elif $3==4 fx_morpho[0] 3,{$5*2+2},0,2,0,1,0
    elif $3==5 fx_smooth_selective[0] {$5*4},{$4*2},10,10,0,1,0
    elif $3==6 fx_smooth_haar[0] {10-{$4*10}},{round($5*5,1)},0,0,1,0
    elif $3==7 to_rgb[0] fx_kuwahara[0] {6-{$4*5}},{1+{$5*2.9}},0,0
    fi

    fx_mix_lab[0] 1,0,0,$17,$15,0,$17,$16,0,0,2,0
    if $25==0 fx_unsharp[0] 1,$6,20,$7,0.00,1.00,0.5,1,0,7,0
    else
      +to_rgba[0] +fx_edges[0] $6,{30-{$7*5}},1,0
      if $21!=9 move[1] 4 fi
      fx_unsharp[1] 1,$6,20,$7,0.00,1.00,0.5,1,0,7,0
      fx_gaussian_blur[2] {{w+h}/500},0,0,1,0,0,0
      to_gray[2]
      split[1] c
      if $21!=9 reverse[4,5] compose_multiply[4,5] append[-5,-4,-3,-2] c
      else reverse[3,4] compose_multiply[3,4] append[-4,-3,-2,-1] c
      fi
      compose_rgba[0,1]
    fi

    if $22==0
      if $21==3 reverse fx_compose_overlay $20
      elif $21==8 reverse fx_compose_hardlight $20
      elif $21!=9 reverse fx_compose_multiply $20
      fi
    fi

    if $8==1
      fx_glow[0] $9,0,0
    elif $8==2
      +fx_highpass[0] {$9*3},2,1,0,0
      if $22==1" && "$21!=9 reverse[1,2] fi
      reverse[0,1] fx_compose_overlay[0,1] {$9/40}
    elif $8==3 [0] [0]
      if $22==1" && "$21!=9 reverse[1,3] fi
      fx_compose_screen[1,2] 1  fx_gaussian_blur[1] {$9*3},0,0,1,0,0,0
      reverse[0,1] fx_compose_softlight[0,1] {$9/20}
    elif $8==4
      fx_smooth_anisotropic[0] 0,1.5,0.3,{$9/4},1.10,0.80,30.00,2.0,0,1,1,0,1,0
    elif $8==5
      +fx_mix_hsv[0] 1,0,0,1,-1,0,1,0,0,0,2,0
      if $22==1" && "$21!=9 reverse[1,2] fi
      tk_fx_channel_processing[1] 1,1,0,0,4,0,{100-{$9*2.5}},256,0,1,0,2,0,0
      fx_gaussian_blur[1] $9,0,0,1,0,0,0
      tk_fx_channel_processing[1] 1,1,0,0,4,0,{50-{$9*2}},256,0,1,0,2,0,0
      tk_fx_replace_color[1] 1,0,0,0,0,255,0,0,0,0
      fx_gaussian_blur[1] {$9*2},0,0,1,0,0,0
      reverse[0,1] fx_compose_softlight[0,1] {0.25+{$9/150}}
    elif $8==6
      fx_smooth_anisotropic[0]  60,0.16,{{$9/50}+0.6},{{$9/9}+0.6},2.35,0.8,30,2,0,1,1,0,1
    fi

    if $26!=0 r $scup%,$scup% fi
  done done

fx_tk_photoillustration_preview :
  gui_split_preview "fx_tk_photoillustration ${1--2}",$-1

#*****END OF FILTER**********************
#****************************************
# watercolor
#****************************************

# #@gui Watercolor : fx_watercolor, fx_watercolor_preview(1)
# #@gui : sep = separator(), note = note("General settings:")
# #@gui : Color Intensity = float(1.8,0,4)
# #@gui : Light Colors = float(0.1,0,1)
# #@gui : Dark Colors = float(1,0,10)
# #@gui : sep = separator(), note = note("Line art settings:")
# #@gui : Line Art Details = float (80,50,100)
# #@gui : Line Art Smoothness = float(0,0,10)
# #@gui : Line Art Strength = float(0.5,0,1)
# #@gui : Line Art Style = choice("pencil","ink","comic style")
# #@gui : Line Art Fade = float(0,0,100)
# #@gui : sep = separator(), note = note("Color brushes settings:")
# #@gui : Brush Style = choice("modern","classic","abstract","line","smooth")
# #@gui : Cyan Brush Size = float(2,0,50)
# #@gui : Cyan Stroke Strength = float(0,-5,5)
# #@gui : Cyan Edge Distance = float(2,0,10)
# #@gui : Cyan Abstraction = float(4,0,10)
# #@gui : Magenta Brush Size = float(2,0,50)
# #@gui : Magenta Stroke Strength = float(0,-5,5)
# #@gui : Magenta Edge Distance = float(3,0,10)
# #@gui : Magenta Abstraction = float(3,0,10)
# #@gui : Yellow Brush Size = float(2,0,50)
# #@gui : Yellow Stroke Strength = float(0,-5,5)
# #@gui : Yellow Edge Distance = float(4,0,10)
# #@gui : Yellow Abstraction = float(2,0,10)
# #@gui : sep = separator(), note = note("Paper and ambience settings:")
# #@gui : Paper Color Black = bool(0)
# #@gui : Add Paper Texture = bool(0)
# #@gui : Invert Colors = bool(0)
# #@gui : Ambient Light = float(0,-50,50)
# #@gui : sep = separator(), Preview type = choice("Full","Forward horizontal","Forward vertical","Backward horizontal","Backward vertical","Duplicate top","Duplicate left","Duplicate bottom","Duplicate right","Duplicate horizontal","Duplicate vertical","Checkered","Checkered inverse")
# #@gui : sep = separator(), note = note("<small>Authors : <i>Tom Keil and Arto Huotari </i>       Latest update: <i>2011/19/02</i>.</small>")
# #@gui : note = link("Tutorial download","http://www.slideshare.net/ArtoHuotari/gmig-water-color-filter-tutorial")
# #@gui : note = link("Video demonstration here","http://vimeo.com/19713850")
# fx_watercolor :
#   repeat $! l[$>] split_opacity l[0]
#   #secure details:
#   if $7==0 +fx_gradient_norm $5,0.5,{99.99-$4},$4,1,0
#   elif $7==1 +fx_edges {$5/3.5},{95-$4},0,0
#   elif $7==2 +fx_edges {$5/3.5},{95-$4},0,0
#   +fx_mix_hsv[0] 1,0,0,1,-1,0,1,0,0,0,2,0
#   tk_fx_channel_processing[2] 1,1,0,{$5/10},4,{{$4-50}*2},100,256,0,0,0,2,7,0
#   reverse[1,2] fx_compose_multiply[1,2] {0.5+{$6/2}}
#   fi fx_frame_round_old[1] 5,$8,15,0,255,255,255,255,0,0.1,3

#   #image preparation:
#   fx_smooth_anisotropic[0]
#   60,0.16,{{20/50}+0.6},{{20/9}+0.6},2.35,0.8,30,2,0,1,1,0,1
#   [0] +negate[0] move[1] 4
#   fx_gaussian_blur[2] {{w+h}/100},0,0,1,0,0,0
#   fx_compose_dodge[1,2] 1
#   fx_mix_lab[0] 1,0,0,$1,0,0,$1,0,0,0,2,0
#   reverse[0,1]
#   fx_compose_colorburn[0,1] $2

#   +luminance[0] reverse[1,2]
#   tk_fx_channel_processing[1] 1,1,0,0,4,{$3*5},100,256,0,0,0,2,0,0
#   fx_gaussian_blur[1] $3,0,0,1,0,0,0
#   tk_fx_channel_processing[1] 1,1,0,0,4,0,99,256,0,1,0,2,0,0
#   tk_fx_replace_color[1] 1,0,255,255,255,255,0,0,0,0
#   fx_spread[1] {$3*2},{$3*2},0,0
#   fx_gaussian_blur[1] {{w+h}/1000},0,0,1,0,0,0
#   reverse[0,1] fx_compose_multiply[0,1] 1

#   #channel and mask creation:
#   split[0] c
#   if $9==0 +negate[0] +negate[1] +negate[2]
#   elif $9==1 +fill_color[0] 255,255,255 +fill_color[0] 255,255,255
#   +fill_color[0] 255,255,255
#   elif $9==2 +fill_color[0] 255,255,255 +fill_color[0] 255,255,255
#   +fill_color[0] 255,255,255
#   elif $9==3 +fx_edges[0] {$10/5},{$13*5},1,0
#   +fx_edges[1] {$14/5},{$17*5},1,0 +fx_edges[2] {$18/5},{$21*5},1,0
#   elif $9==4 +negate[0] +negate[1] +negate[2] fi

#   #channel and mask processing:
#   tk_fx_channel_processing[0] 1,{{$11/5}+1},{$11/50},0,0,0,100,256,0,0,0,2,0,0
#   if $9!=2
#   fx_gaussian_blur[0] $10,0,0,1,0,0,0
#   else cubism[0] 300,{$13*5},{$13*36},1,{$10/50} fi
#   if $9==0
#   tk_fx_channel_processing... 1,{{$11/5}+1},{$11/50},0,0,0,100,256,0,0,0,2,0,0
#   cubism... 300,{$13*5},{$13*36},1,{$10/50} fi
#   if $9==4
#   tk_fx_channel_processing... 1,{{$11/5}+1},{$11/50},0,0,0,100,256,0,0,0,2,0,0
#   fx_painting... $13,1.5,2 fi
#   fx_frame_fuzzy... {$12*5},{$12*5},{$13*20},{$10/2},0,0,0,255

#   tk_fx_channel_processing[1] 1,{{$15/5}+1},{$15/50},0,0,0,100,256,0,0,0,2,0,0
#   if $9!=2
#   fx_gaussian_blur[1] $14,0,0,1,0,0,0
#   else cubism[1] 300,{$17*5},{$17*36},1,{$14/50} fi
#   if $9==0
#   tk_fx_channel_processing.. 1,{{$15/5}+1},{$15/50},0,0,0,100,256,0,0,0,2,0,0
#   cubism.. 300,{$17*5},{$17*36},1,{$14/50} fi
#   if $9==4
#   tk_fx_channel_processing.. 1,{{$15/5}+1},{$15/50},0,0,0,100,256,0,0,0,2,0,0
#   fx_painting.. $17,1.5,2 fi
#   fx_frame_fuzzy.. {$16*5},{$16*5},{$17*20},{$14/2},0,0,0,255

#   tk_fx_channel_processing[2] 1,{{$19/5}+1},{$19/50},0,0,0,100,256,0,0,0,2,0,0
#   if $9!=2
#   fx_gaussian_blur[2] $18,0,0,1,0,0,0
#   else cubism[2] 300,{$21*5},{$21*36},1,{$18/50} fi
#   if $9==0
#   tk_fx_channel_processing. 1,{{$19/5}+1},{$19/50},0,0,0,100,256,0,0,0,2,0,0
#   cubism. 300,{$21*5},{$21*36},1,{$18/50} fi
#   if $9==4
#   tk_fx_channel_processing. 1,{{$19/5}+1},{$19/50},0,0,0,100,256,0,0,0,2,0,0
#   fx_painting. $21,1.5,2  fi
#   fx_frame_fuzzy. {$20*5},{$20*5},{$21*20},{$18/2},0,0,0,255
#   to_gray. to_gray.. to_gray... to_rgba[0] to_rgba[1] to_rgba[2]

#   #recombine image:
#   split[0] c reverse[3,-3] compose_multiply[3,-3] append[0,1,2,3] c
#   split[1] c reverse[4,-2] compose_multiply[4,-2] append[1,2,3,4] c
#   split[2] c reverse[5,-1] compose_multiply[5,-1] append[2,3,4,5] c
#   if $22==0 +fill_color[0] 255,255,255 else +fill_color[0] 0 fi
#   reverse[0,-1]  compose_rgba[0,-1]
#   if $22==0 +fill_color[1] 255,255,255 else +fill_color[1] 0 fi
#   reverse[1,-1] compose_rgba[1,-1]
#   if $22==0 +fill_color[2] 255,255,255 else +fill_color[2] 0 fi
#   reverse[2,-1] compose_rgba[2,-1]
#   to_gray[0] to_gray[1] to_gray[2] append[0,1,2] c
#   if $23==1 fx_paper 0,0 fi
#   if $24==1 negate[0] fi
#   fx_mix_lab 1,$25,0,1,0,0,1,0,0,0,2,0
#   reverse[0,1] fx_compose_multiply[0,1] $6
#   done a c done done

# fx_watercolor_preview :
#   gui_split_preview "fx_watercolor ${1--2}",$-1

#*****END OF FILTER**********************

#*******END OF DIRECTORY*****************
#@gui _

#@gui _<b>Sequences</b>

#****************************************
# Object animation
#****************************************

#@gui Object Animation : fx_tk_animateobject, fx_tk_animateobject_preview(1)
#@gui : sep = separator()
#@gui : note = note("Object motion:")
#@gui : X-Motion = float(0,-100,100)
#@gui : Y-Motion = float(0,-100,100)
#@gui : Z-Motion = float(0,-10,50)
#@gui : sep = separator()
#@gui : note = note("Camera position:")
#@gui : Camera X = float(0.5,0,1)
#@gui : Camera Y = float(0.5,0,1)
#@gui : sep = separator()
#@gui : note = note("Frame settings:")
#@gui : Frame Size = int(400,50,1920)
#@gui : Frames = int(2,2,100)
#@gui : Reverse Motion = bool(0)
#@gui : note = note("<small>Your mask must be placed below your image. Switch input layers to <i><b>Active and below</b></i>.</small>")
#@gui : sep = separator()
#@gui : Work on Frameset = bool(0)
#@gui : note = note("<small>To use this option your mask must be placed below your frames. Switch input layers to <i><b>All</b></i>.</small>")
#@gui : sep = separator()
#@gui : note = note("Advanced settings:")
#@gui : Sharpen Object = float(0,0,10)
#@gui : Expand Background Reconstruction = float(0,0,50)
#@gui : Smoothen Background Reconstruction = float(0,0,1)
#@gui : Adjust Background Reconstruction = float(1,1,256)
#@gui : sep = separator()
#@gui : Blue Screen Mode = bool(0)
#@gui : note = note("<small>Layer stack for images: Object image top, background image below, mask bottom. Layer stack for framesets: Frameset top, object image below, mask bottom. Switch input layers to <i><b>All</b></i>.</small>")
#@gui : sep = separator()
#@gui : Camera Motion Only = bool(0)
#@gui : Closeup = float(1,1,10)
#@gui : note = note("<small>Use this option without mask layer. Switch input layers to <i><b>Active</b></i> or <i><b>All</b></i></small>")
#@gui : sep = separator(), note = note("<small>Author : <i>Tom Keil</i>.      Latest update: <i>2012/08/04</i>.</small>")
##@gui : note = link("Filter explained here",http://www.tkfilter.bplaced.net/TKFilter%20tutorials%20animated%20objects.html)

fx_tk_animateobject :

#resize and reconstruct single image background

 if $!<=1 return fi
 if $15==0

 to_rgb if $9==0
 r {w*{$6/max(w,h)}},{h*{$6/max(w,h)}},1,{s},6 c 0,255
 if $14==0
 [-1,-2] [0] rv[0,1]
 blur_xy[0] $11 ir[0] $13,256 n[0] 0,255
 tk_fx_replace_color[0] 1,0,0,0,0,255,0,0,0,0
 blur_xy[0] $12 inpaint[1] [0]
 rm[0] rv[-1,-2]
 else [0] rv[0,1] rv[-1,-2]
 [0] [0]
 ... .
 to_gray[-1,-2] ir[-1,-2] 128,256 n[-1,-2] 0,255
 s[1] c a[1,2,3,-1] c
 s[2] c a[2,3,4,-1] c
 rv[1,-1] compose_rgba[1,-1]
 rv[2,-1] compose_rgba[2,-1]
 to_rgb[1,2]
 fi

#construct object views

  dx={$1/$7} dy={$2/$7} dz=1 repeat $7
 shift[-1,-2] $dx%,$dy%
 if $3>=0 dz={$dz+{{$3}/$7}}
 else dz={$dz-{{{1-{10.01+$3}/10}}/$7}} fi
 +fx_zoom[-1,-2] $dz,$4,$5,0
 to_gray. ir. 128,256 n. 0,255 to_rgb..
 s.. c a[-4,-3,-2,-1] c
 if $10!=0 unsharp. {$10/5},{$10/2},0 cut. 0,255  fi
 mv. -3 done rm[-1,-2] rv rv[-1,-2]

#combine object views with background

 index={-3} repeat $7
 .. rv[-1,-2] index={$index-1}
 rv[-3,$index] compose_rgba[-3,$index]
 done rm.. if $8==1 rv fi

 else

#construct background on frameset

 if $14==0 frames={$!-1} counter={-5}
 [-1,-2]
 +blur_xy. $11 ir. $13,256 n. 0,255
 tk_fx_replace_color. 1,0,0,0,0,255,0,0,0,0
 blur_xy. $12
 repeat $frames inpaint[$counter] .
 counter={$counter-1} done rm[-1,-4]

#create and combine object views on frameset

 [-1,-2]
 else frames={$!-2} +to_gray.
 s... c a[-5,-4,-3,-1] c
 +to_gray. +fc. 0,0,0
 rv[-1,-4] compose_rgba[-1,-4] mv. -3
 fi

 counter={-6} dx=0 dy=0 dz=1 repeat $frames
 [-1,-2]
 shift[-1,-2] $dx%,$dy%
 if $3>=0 dz={$dz+{{$3}/$frames}}
 else dz={$dz-{{{1-{10.01+$3}/10}}/$frames}} fi
 +fx_zoom[-1,-2] $dz,$4,$5,0
 to_gray. ir. 128,256 n. 0,255 to_rgb..
 s.. c a[-4,-3,-2,-1] c
 if $10!=0 unsharp. {$10/5},{$10/2},0 cut. 0,255 fi
 mv. $counter
 compose_rgba[$counter,{$counter-1}]
 dx={$dx+{$1/$frames}} dy={$dy+{$2/$frames}}
 counter={$counter-1}
 rm[-1,-2]
 done  rm[-1,-2,-3,0]

 fi

 #camera motion only

 else

 to_rgb if $9==0
 r {w*{$6/max(w,h)}},{h*{$6/max(w,h)}},1,{s},6 c 0,255 fi

 dx=0 dy=0 dz=1 if $9==0 counter=$7 else counter={$!-1} fi
 index={-2} repeat $counter
 if $9==0 . mv. $index fi
 dx={$dx+{$1/$7}} dy={$dy+{$2/$7}}
 shift[$index] $dx%,$dy%
 if $3>=0 dz={$dz+{{$3}/$7}}
 else dz={$dz-{{{1-{10.01+$3}/10}}/$7}} fi
 fx_zoom[$index] $16,$4,$5,0
 fx_zoom[$index] $dz,$4,$5,0
 if $10!=0 unsharp[$index] {$10/5},{$10/2},0 cut[$index] 0,255 fi
 index={$index-1} done
 if $16!=1 rm. fi fi

 #preview function

fx_tk_animateobject_preview:

 if $15==0 start_x={{xM/w}*100} start_y={{yM/h}*100} else start_x=50 start_y=50 fi
 fx_tk_animateobject ${1-6},1,${8--1} k[0]
 line[0] {$1+$start_x}%,{$2+$start_y-10}%,{$1+$start_x}%,{$2+$start_y+10}%,1,255,0,0
 line[0] {$1+$start_x-10}%,{$2+$start_y}%,{$1+$start_x+10}%,{$2+$start_y}%,1,255,0,0
 line[0] {$4*100}%,0%,{$4*100}%,{{$5*100}-5}%,1,255,255,0
 line[0] {$4*100}%,{{$5*100}+5}%,{$4*100}%,100%,1,255,255,0
 line[0] 0%,{$5*100}%,{{$4*100}-5}%,{$5*100}%,1,255,255,0
 line[0] {{$4*100}+5}%,{$5*100}%,100%,{$5*100}%,1,255,255,0

#*****END OF FILTER**********************

#*******END OF DIRECTORY*****************
#@gui _
#@gui _<b>Colors</b>

#****************************************
# Vintage style
#****************************************

#@gui Vintage Style : fx_tk_vintage, fx_tk_vintage_preview(1)
#@gui : Exposure = float(2,-5,5)
#@gui : Contrast = float(0.85,0.5,1.5)
#@gui : Saturation = float(0.7,0,4)
#@gui : Shadows Threshold = float(80,0,128)
#@gui : Highlights Threshold = float(200,128,255)
#@gui : Transition Smoothness = float(5,0,50)
#@gui : sep = separator()
#@gui : Color Shadows = color(147,26,161)
#@gui : Strength Shadows = float(0.3,0,1)
#@gui : Color Midtones = color(235,220,176)
#@gui : Strength Midtones = float(0.4,0,1)
#@gui : Color Highlights = color(190,181,108)
#@gui : Strength Highlights = float(0.2,0,1)
#@gui : Color Overall Effect = color(0,0,100)
#@gui : Color Effect Mode = choice("exclusion","overlay","soft  Light","multiply","screen")
#@gui : Strength Effect = float(0.3,0,1)
#@gui : sep = separator()
#@gui : Vignette Size = float(25,0,100)
#@gui : Vignette Strenth = float(0,0,1)
#@gui : sep = separator(), Preview type = choice("Full","Forward  horizontal","Forward vertical","Backward horizontal","Backward vertical")
#@gui : sep = separator(), note = note("<small>Author : <i>Tom Keil</i>.       Latest update: <i>2011/04/06</i>.</small>")
##@gui : note = link("Filter explained  here",http://www.tkfilter.bplaced.net/TKFilter%20filter.html)

fx_tk_vintage :
 repeat $! l[$>]
 to_rgb[0] +luminance[0] +luminance[0] +luminance[0]
 fx_mix_lab[0] $2,{$1*10},0,$3,0,0,$3,0,0,0,2,0
 tk_fx_channel_processing. 1,1,0,0,4,{$4/2.55},100,256,0,1,0,2,0,0
 tk_fx_channel_processing.. 1,1,0,0,4,{$4/2.55},{$5/2.55},256,0,0,0,2,0,0
 tk_fx_channel_processing... 1,1,0,0,4,0,{$5/2.55},256,0,1,0,2,0,0
 to_gray[-1,-2,-3] fx_gaussian_blur[-1,-2,-3] $6,0,0,1,0,0,0

 +fc[0] $7,$8,$9 +fc[0] $11,$12,$13 +fc[0] $15,$16,$17 to_rgba[-1,-2,-3]
 s. c rv[-1,-9] compose_multiply[-1,-9] mv[-8] 9 a[-4,-3,-2,-1] c
 s.. c rv[-2,-8] compose_multiply[-2,-8] mv[-7] 7 a[-5,-4,-3,-2] c
 s... c rv[-3,-7] compose_multiply[-3,-7] mv[-6] 5 a[-6,-5,-4,-3] c
 +fc[0] $19,$20,$21 rv[-1,-5]
 if $22==0 fx_compose_exclusion[-1,-5] $23
 elif $22==1 fx_compose_overlay[-1,-5] $23
 elif $22==2 fx_compose_softlight[-1,-5] $23
 elif $22==3 fx_compose_multiply[-1,-5] $23
 elif $22==4 fx_compose_screen[-1,-5] $23
 fi

 rv[-3,-4] fx_compose_lighten[-3,-4] $10
 rv[-2,-3] fx_compose_overlay[-2,-3] $14
 rv[-1,-2] fx_compose_darken[-1,-2] $18

 if $25!=0
 +fc[0] 255,255,255 fx_frame_round_old. 2,$24,0,0,0,0,0,255,100,0.1,3
 fx_gaussian_blur. {$6*5},0,0,1,0,0,0
 rv[-1,-2] fx_compose_multiply[-1,-2] $25 fi
 done done

fx_tk_vintage_preview :
 gui_split_preview "fx_tk_vintage ${1--2}",$-1

#*******END OF FILTER********************

#****************************************
#metallic look Filter
#****************************************

#@gui Metallic Look : fx_tk_metallic, fx_tk_metallic_preview(1)
#@gui : Strength = float(1,0,1)
#@gui : Smoothness = float(0,0,20)
#@gui : Metal = choice("Silver","Gold","Copper","Bronze","Blue steel")
#@gui : sep = separator(), Preview type = choice("Full","Forward horizontal","Forward vertical","Backward horizontal","Backward vertical","Duplicate top","Duplicate left","Duplicate bottom","Duplicate right","Duplicate horizontal","Duplicate vertical","Checkered","Checkered inverse")
#@gui : sep = separator(), note = note("<small>Author : <i>Tom Keil</i>.      Latest update: <i>2011/12/04</i>.</small>")
##@gui : note = link("Filter explained here",http://www.tkfilter.bplaced.net/TKFilter%20filter.html)

fx_tk_metallic :
 repeat $! l[$>]
 fx_gaussian_blur $2,0,0,1,1,0,0
 luminance +luminance
 fx_apply_curve[1] 0,31,111,64,17,110,176,148,75,177,235,186,1,0,0,0,0
 fx_apply_curve[1] 0,31,111,64,17,110,176,148,75,177,235,186,1,0,0,0,0
 rv[0,1] fx_compose_value[0,1] $1,0
 if $3==1 fx_mix_rgb 1,50,0,1,50,0,1,-50,0,0,2,0
 elif $3==2 fx_mix_rgb 1,75,0,1,5,0,1,-25,0,0,2,0
 elif $3==3 fx_mix_rgb 1,70,0,1,40,0,1,-20,0,0,2,0
 elif $3==4 fx_mix_rgb 1,-5,0,1,0,0,1.1,12,0,0,2,0
 fi done done

fx_tk_metallic_preview :
 gui_split_preview "fx_tk_metallic ${1--2}",$-1

#*****END OF FILTER**********************

#****************************************
#Zone system
#****************************************

#@gui Zone System : fx_zonesystem, fx_zonesystem_preview(1)
#@gui : Shadows Zone = int(1,1,5)
#@gui : Highlights Zone = int(10,6,10)
#@gui : Gamma = float(1,0,5)
#@gui : Contrast = float(1,0,4)
#@gui : Black Point = int(0,0,255)
#@gui : White Point = int(255,0,255)
#@gui : sep = separator(), Preview type = choice("Full","Forward horizontal","Forward vertical","Backward horizontal","Backward vertical","Duplicate top","Duplicate left","Duplicate bottom","Duplicate right","Duplicate horizontal","Duplicate vertical","Checkered","Checkered inverse")
#@gui : sep = separator(), note = note("<small>Author : <i>Tom Keil</i>.      Latest update: <i>2011/13/02</i>.</small>")
fx_zonesystem :
  repeat $! l[$>] to_rgb rgb2lab s c n[0] {{$1-1}*10}%,{$2*10}%
  a c lab2rgb tk_fx_channel_processing $3,$4,0,0,0,0,100,256,0,0,0,2,7,0
  fx_apply_curve 0,$5,0,$6,255,-1,128,-1,128,-1,128,255,1,7,0,0,0
  done done

fx_zonesystem_preview :
  gui_split_preview "fx_zonesystem ${1--2}",$-1

#*****END OF FILTER**********************

#****************************************
# Color temperature
#****************************************

#@gui Color Temperature : fx_tk_colortemp, fx_tk_colortemp_preview
#@gui : Color Temperature = float(0,-20,20)
#@gui : Automatic Color Balance = bool(0)
#@gui : sep = separator()
#@gui : Preview Type = choice("Full","Forward horizontal","Forward vertical","Backward horizontal","Backward vertical","Duplicate top","Duplicate left","Duplicate bottom","Duplicate right")
#@gui : sep = separator(), note = note("<small>Author: <i>Tom Keil</i>.      Latest update: <i>2012/04/05</i>.</small>")
fx_tk_colortemp :

 repeat $! l[$>] if $2==1 +luminance. to_rgb..
 s.. c  avb={-2,127.5-ia} avg={-3,127.5-ia} avr={-4,127.5-ia}
 +[-4] $avr +... $avg +.. $avb a[-4,-3,-2] c rv compose_luminance fi
 fx_mix_lab 1,0,0,1,{if({$1>=0},{$1/4},{$1*0.75})},0,1,$1,0,0,2,0 done done

fx_tk_colortemp_preview :

 gui_split_preview "fx_tk_colortemp ${1--2}",$-1

#*****END OF FILTER**********************

#*******END OF DIRECTORY*****************
#@gui _
#@gui _<b>Degradations</b>

#*******END OF DIRECTORY*****************
#@gui _
#@gui _<b>Details</b>

#****************************************
#Mask Creator
#****************************************

#@gui Mask Creator : fx_tk_mask, fx_tk_mask_preview(1)
#@gui : sep = separator()
#@gui : Mask Type = choice("Luminance","Saturation","Hue","LAB-lightness")
#@gui : Color Channels = choice("All","Red","Green","Blue","Yellow","Magenta","Cyan","LAB-A","LAB-B")
#@gui : Shadows Threshold = float(0,0,255)
#@gui : Highlights Threshold = float(255,0,255)
#@gui : Tones Smoothness = float(0,0,20)
#@gui : Mask Contrast = float(1,0,10)
#@gui : Negative = bool(0)
#@gui : Apply Mask = bool(0)
#@gui : Transparency = float(1,0,1)
#@gui : sep = separator(), Preview type = choice("Full","Forward horizontal","Forward vertical","Backward horizontal","Backward vertical","Duplicate top","Duplicate left","Duplicate bottom","Duplicate right","Duplicate horizontal","Duplicate vertical","Checkered","Checkered inverse")
#@gui : sep = separator(), note = note("<small>Author: <i>Tom Keil</i>.      Latest update: <i>2011/11/04</i>.</small>")
##@gui : note = link("Filter explained here",http://www.tkfilter.bplaced.net/TKFilter%20filter.html)

fx_tk_mask :

 repeat $! l[$>]
 if $8==1 +to_rgba. rv[-1,-2] fi to_rgb.
 if $2==1 channels. 0
 elif $2==2 channels. 1
 elif $2==3 channels. 2
 elif $2==4 rgb2cmy channels. 2
 elif $2==4 rgb2cmy channels. 1
 elif $2==4 rgb2cmy channels. 0
 elif $2==5 rgb2lab channels. 1
 elif $2==6 rgb2lab channels. 2
 fi to_rgb.

 if $1==0 luminance. +luminance.
 elif $1==1 rgb2hsv. channels. 1
 n. 0,255 .
 elif $1==2 rgb2hsv. channels. 0
 n. 0,255  .
 elif $1==3 rgb2lab. channels. 0
 n. 0,255  .
 fi

 c. $3,255 n. 0,255
 f.. "if(i<$4,if(c==0,i,i),0)"
 fx_gaussian_blur[-1,-2] $5,0,0,1,0,0,0
 compose_darken
 if $8==1 rv[-1,-2] fi
 tk_fx_channel_processing. 1,$6,0,0,0,0,100,256,0,0,0,2,0,0
 if $7==1 negate. fi
 if $8==1 s.. c  rv[-1,-2]
 fx_compose_multiply[-1,-2] $9
 a[-4,-3,-2,-1] c
 fi done done

fx_tk_mask_preview :
 gui_split_preview "fx_tk_mask ${1--2}",$-1
#*******END OF FILTER********************

#****************************************
#dynamic range increase
#****************************************

#@gui Dynamic Range Increase : fx_tk_dri, fx_tk_dri_preview(1)
#@gui : Map Tones = float(0,0,1)
#@gui : Recover Shadows = float(0,0,1)
#@gui : Recover Highlights = float(0,0,1)
#@gui : Enhance Details = float (1,0,5)
#@gui : Detail Strength = float (0.5,0,1)
#@gui : Map Tones = bool(1)
#@gui : Enhance Details = bool(1)
#@gui : sep = separator(), Preview type = choice("Full","Forward horizontal","Forward vertical","Backward horizontal","Backward vertical","Duplicate top","Duplicate left","Duplicate bottom","Duplicate right","Duplicate horizontal","Duplicate vertical","Checkered","Checkered inverse")
#@gui : sep = separator(), note = note("<small>Author: <i>Tom Keil</i>      Latest update: <i>2011/12/04</i>.</small>")
##@gui : note = link("Filter explained here",http://www.tkfilter.bplaced.net/TKFilter%20filter.html)

fx_tk_dri :
 repeat $! l[$>]
 if $6==1
 +negate +to_rgba[0] +luminance[0] +to_rgba[0] +luminance[0]
 fx_gaussian_blur[1] {{{w+h}/20}*{1.1-$1}},0,0,1,0,0,0 to_gray[1]
 rv[0,1] fx_compose_softlight[0,1] $1
 fx_gaussian_blur[2] {{w+h}/200},0,0,1,1,0,0 negate[2] to_gray[2]
 s[1] c rv[4,5] compose_multiply[4,5] a[1,2,3,4] c rv[0,1]
 fx_compose_dodge[0,1] $2
 fx_gaussian_blur[2] {{w+h}/200},0,0,1,1,0,0 to_gray[2] s[1] c
 rv[4,5] compose_multiply[4,5] a[1,2,3,4] c rv[0,1]
 fx_compose_colorburn[0,1] $3 fi
 if $7==1 +map_tones[0] 0.50,0.70,$4,50
 +normalize_local[0] $4,6.00,5.00,1.00
 rv[0,1] fx_compose_value[0,1] $5,0
 rv[0,1] fx_compose_value[0,1] $5,0 fi
 done done

fx_tk_dri_preview :

 gui_split_preview "fx_tk_dri ${1--2}",$-1

#*************END OF FILTER**************

#****************************************
# portrait retouching
#****************************************

#@gui Portrait Retouching : fx_tk_portrait, fx_tk_portrait_preview(0)
#@gui : sep = separator()
#@gui : Retouching Style = choice("Standard","Glamour glow","Masculine","High key","Low Key")
#@gui : Effect Strength = float(100,0,100)
#@gui : sep = separator()
#@gui : note = note("<b>Retouching settings:</b>")
#@gui : Fine Details Smoothness = float(1,0,10)
#@gui : Medium Details Smoothness = float(5,0,25)
#@gui : Areas Smoothness = float(20,0,100)
#@gui : Fine Details Threshold = float(3,0,10)
#@gui : Medium Details Threshold = float(20,0,100)
#@gui : Areas Light Adjustment = float(10,0,100)
#@gui : Smoothing Type = choice("Gaussian","Bilateral","Anisotropic","Median")
#@gui : Output Mode = choice("Retouched image","Composed layers","All layers and masks")
#@gui : sep = separator()
#@gui : note = note("<b>Skin tone mask settings:</b>")
#@gui : Apply Skin Tone Mask = bool(1)
#@gui : Similarity Space = choice(2,"RGB[A]","RGB","YCbCr","Red","Green","Blue","Opacity","Luminance","Blue & Red chrominances","Hue","Saturation")
#@gui : Tolerance = float(25,0,100)
#@gui : Smoothness = float(2,0,25)
#@gui : Selected Color = color(250,180,150,255)
#@gui : Generic Skin Structure = bool(0)
#@gui : sep = separator()
#@gui : note = note("<b>Enhancement settings:</b>")
#@gui : Apply Adjustments On = choice(0,"Final image","Retouched areas only","Sharpened areas only","Retouched and sharpened areas")
#@gui : Sharpening Radius = float(1,0,10)
#@gui : Sharpening Strength = float(1.5,0,5)
#@gui : Edge Threshold = float(10,0,50)
#@gui : Edge Smoothness = float(1,0,10)
#@gui : Color Temperature = float(0,-20,20)
#@gui : Lightness = float(0,-50,50)
#@gui : Contrast = float(1,0.5,1.5)
#@gui : Saturation = float(1,0,4)
#@gui : sep = separator()
#@gui : Preview Selection = choice("Retouched image final","Retouched image basic","Retouch layer","Sharpening layer","Skin tone mask","Skin tone colors","Edge mask","High frequency layer","Medium frequency layer","Low frequency layer")
#@gui : Preview Type = choice("Full","Forward horizontal","Forward vertical","Backward horizontal","Backward vertical","Duplicate top","Duplicate left","Duplicate bottom","Duplicate right")
#@gui : sep = separator(), note = note("<small>Author: <i>Tom Keil</i>.      Latest update: <i>2012/18/04</i>.</small>")
##@gui : note = link("Filter explained here","http://www.tkfilter.bplaced.net/TKFilter%20tutorials%20Portrait%20retouching.html")

fx_tk_portrait :

 repeat $! l[$>] to_rgb
 if narg($_previewflag)==0 _previewflag=0 fi

#create layers and masks

 if $1==3" || "$1==4 +luminance[0] elif $1==2 +channels[0] 2 fx_unsharp. 0,$21,30,$22,0.00,1.00,0.5,1,0,0,0 fi

 +fx_edges[0] $24,$23,0,0 if $23==0 fc. 0 fi +fx_unsharp[0] 0,$21,30,$22,0.00,1.00,0.5,1,0,7,0

 if $_previewflag==4" && "$29==5 +tk_fx_select_color[0] ${12-18},0,0 else +tk_fx_select_color[0] ${12-18},1,0 fi

 +fx_split_freq[0] $6 if $19==1 fc. 128,128,128 noise. {$6*2},0 luminance. fi

 +fx_split_freq[0] $7

#retouch frequency layers

 rm[-2,-4]
 +fx_tk_dri[0] {$8/100},{$8/200},{$8/200},0,0,1,0,0

 if $9==0 b. $5 rv[-1,-2] b. $4 b... $3
 elif $9==1 bilateral. $7,$5 rv[-1,-2] bilateral. $6,$4 bilateral... {$3/5},$3
 elif $9==2 smooth. $5 rv[-1,-2] smooth. $4 smooth... $3
 elif $9==3 median. $5 rv[-1,-2] median. $4 median... $3
 fi

#recompose retouching layers

 if ($_previewflag!=0" && "$_previewflag<=3)" || "($10<=1" && "$_previewflag==0)

 fx_compose_freq[-1,-2] rv[-1,-2] fx_compose_freq[-1,-2]

 if $11==1 to_rgba. b.. $14 s. c negate. +. [-5] a[-1,-2,-3,-4] c fi rm.. mv. 1

 to_rgba. s. c negate[-1,-5] +. [-5] a[-1,-2,-3,-4] c rm.. if $23==50 fc. 0,0,0,0 fi

#recompose final image

 if $_previewflag==1" || "$_previewflag==2" || "($10==0" && "$_previewflag==0)

 if $1!=0" && "$1!=1 mv.. 0 fi

 if $20==1 fx_mix_lab.. $27,$26,0,$28,{if({$25>=0},{$25/4},{$25*0.75})},0,$28,$25,0,0,2,0
 elif $20==2 fx_mix_lab. $27,$26,0,$28,{if({$25>=0},{$25/4},{$25*0.75})},0,$28,$25,0,0,2,0
 elif $20==3 fx_mix_lab[-1,-2] $27,$26,0,$28,{if({$25>=0},{$25/4},{$25*0.75})},0,$28,$25,0,0,2,0
 fi

 fx_compose_alpha[-2,-3] {if({$1==0},{$2/100},1)},0 fx_compose_alpha[-1,-2] {if({$1==0},{$2/100},1)},0
 if $23==50 fx_unsharp[0] 0,$21,30,$22,0.00,1.00,0.5,1,0,0,0 fi

 if $_previewflag<=1
 if $1==1 fx_glow[0] {$2/10},0,0
 elif $1==2 fx_compose_hardlight[0,1] {$2/100}
 elif $1==3 fx_compose_screen[0,1] {$2/100}
 elif $1==4 fx_compose_multiply[0,1] {$2/100}
 fi

 if $20==0 fx_mix_lab[0] $27,$26,0,$28,{if({$25>=0},{$25/4},{$25*0.75})},0,$28,$25,0,0,2,0  fi
 fi fi fi done done

#preview function

fx_tk_portrait_preview :

 _previewflag=1
 if $29==1 _previewflag=2 elif $29==2" || "$29==3 _previewflag=3 elif $29>=4 _previewflag=4 fi

 if $29>=2 gui_split_preview "fx_tk_portrait ${1--2}",0
 else gui_split_preview "fx_tk_portrait ${1--2}",$-1 fi

 if $29==1 k[0] elif $29==2 k[2] elif $29==3 k[0] elif $29==4 k... elif $29==5 k...
 elif $29==6 k[-5] negate elif $29==7 k.. elif $29==8 k[0] elif $29==9 k. fi
 _previewflag=0

#*******END OF FILTER********************

#****************************************
#high pass
#****************************************

#@gui High Pass: fx_highpass, fx_highpass_preview(0)
#@gui : Radius = float(5,0,100)
#@gui : Contrast = float(2,0,7)
#@gui : Inverse = bool(0)
#@gui : Greyscale = bool(0)
#@gui : sep = separator(), Preview type = choice("Full","Forward horizontal","Forward vertical","Backward horizontal","Backward vertical","Duplicate top","Duplicate left","Duplicate bottom","Duplicate right","Duplicate horizontal","Duplicate vertical","Checkered","Checkered inverse")
#@gui : sep = separator(), note = note("<small>Author : <i>Tom Keil</i>.      Latest update: <i>2011/05/01</i>.</small>")
fx_highpass :
  repeat $! l[$>]
  to_rgb +negate
  if $4==1 to_gray fi
  fx_gaussian_blur[1] $1,0,0,1,0,0,0
  compose_interpolation
  tk_fx_channel_processing 1,$2,0,0,0,0,100,256,0,0,0,2,0,0
  if $2>=4 tk_fx_channel_processing 1,{$2-3},0,0,0,0,100,256,0,0,0,2,0,0  fi
  tk_fx_channel_processing 1,1,0,0,1,50,100,256,0,0,0,2,0,0
  if $3==1 negate fi done done

fx_highpass_preview :
  gui_split_preview "fx_highpass ${1--2}",$-1

#*************END OF FILTER**************

#*******END OF DIRECTORY*****************
#@gui _
#@gui _<b>Lights & Shadows</b>

#****************************************
#dodge and burn
#****************************************

#@gui Dodge and Burn : fx_dodgeburn, fx_dodgeburn_preview(1)
#@gui : note = note("automatic dodging and burning")
#@gui : sep = separator()
#@gui : Highlights Selection = float(15,0,100)
#@gui : Highlights Abstraction = float(1.5,0,10)
#@gui : Dodge Strength = float(25,0,256)
#@gui : Dodge Blur = float(10,0,20)
#@gui : Shadows Selection = float(40,0,100)
#@gui : Shadows Abstraction = float(1.5,0,10)
#@gui : Burn Strength = float(25,0,256)
#@gui : Burn Blur = float(10,0,20)
#@gui : sep = separator()
#@gui : note = note("Advanved: output dodge and burn layer separate")
#@gui : Keep Layers Separate = bool(0)
#@gui : Keep Original Layer = bool(0)
#@gui : Blur Dodge and Burn Layer = float(10,0,20)
#@gui : sep = separator(), Preview type = choice("Full","Forward horizontal","Forward vertical","Backward horizontal","Backward vertical","Duplicate top","Duplicate left","Duplicate bottom","Duplicate right","Duplicate horizontal","Duplicate vertical","Checkered","Checkered inverse")
#@gui : sep = separator(), note = note("<small>Author: <i>Tom Keil</i>.      Latest update: <i>2011/15/02</i>.</small>")
fx_dodgeburn :
  repeat $! l[$>] +luminance if $9==1 +fc[0] 128,128,128,255 fi
  tk_fx_channel_processing[1] 1,1,0,$2,4,0,{100-$1},256,0,1,0,2,0,0
  tk_fx_channel_processing[1] 1,1,{-{256-$3}},0,0,0,100,256,0,0,0,2,0,0
  fx_gaussian_blur[1] $4,0,0,1,0,0,0 +luminance[0]
  if $9==0 compose_dodge[0,1] else rv[1,2] compose_dodge[1,2] fi
  tk_fx_channel_processing. 1,1,0,$6,4,$5,100,256,0,0,0,2,0,0
  tk_fx_channel_processing. 1,1,{256-$7},0,0,0,100,256,0,0,0,2,0,0
  fx_gaussian_blur. $8,0,0,1,0,0,0
  if $9==0 compose_colorburn[0,1] else compose_colorburn[-1,-2] fi
  if $9==1 fx_gaussian_blur. $11,0,0,1,0,0,0 fi
  if $10==0 if $9==1 rm[0] fi fi done done

fx_dodgeburn_preview :
 gui_split_preview "fx_dodgeburn ${1--2}",$-1

#*************END OF FILTER**************

fx_split_freq :
  repeat $!
    +b. $1 -.. . /.. 2 +.. 128 rv[-2,-1]
  mv[-2,-1] 0 done

fx_compose_freq :
  repeat int($!/2)
    -. 128 *. 2 +[-2,-1] c. 0,255
  mv. 0 done

compose_alpha :
  e[^-1] "Compose image$? two-by-two, using alpha blending."
  repeat int($!/2) l[$>,{$>+1}]
    r. ..,..,..,100%,0,0,0.5,0.5
    to_colormode.. {a1=!({-2,s}%2);a2=!(s%2);max({-2,s}-a1,s-a2)+a1}
    to_colormode. {a=max({-2,s},s);a+(a%2)}
    if {-2,s==2" || "s==4} # Background has alpha.
      _compose_alpha.. _compose_alpha.
      sh. {s-1},{s-1} +*[-3,-1] rm.. +[-3,-2] -[-2,-1]
      sh. 0,{s-2} sh.. {-2,s-1},{-2,s-1}
      max. 1e-10 /.. . *. 255 rm[-2,-1]
    else                        # Background has no alpha.
      sh. 0,{s-2} sh.. {-2,s-1},{-2,s-1} -.. [-4] *[-2,-1] /. 255 rm. +[-2,-1]
    fi
  done done c 0,255

_compose_alpha :
  sh. 0,{s-2} sh.. {-2,s-1},{-2,s-1} max. 1e-10 /. 255 *[-2,-1] rm.

fx_compose_alpha :
  if ${2=0} _fx_revert_layers fi
  repeat int($!/2)
    to_rgba. sh. 3,3 *. $1 rm.
    blend[-2,-1] alpha
  mv. 0 done

#*******END OF DIRECTORY*****************
#@gui _

# Local Variables:
# mode: sh
# End:
#
# (End of G'MIC custom commands)
